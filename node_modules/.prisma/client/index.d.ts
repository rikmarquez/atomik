
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model IdentityArea
 * 
 */
export type IdentityArea = $Result.DefaultSelection<Prisma.$IdentityAreaPayload>
/**
 * Model AtomicSystem
 * 
 */
export type AtomicSystem = $Result.DefaultSelection<Prisma.$AtomicSystemPayload>
/**
 * Model SystemExecution
 * 
 */
export type SystemExecution = $Result.DefaultSelection<Prisma.$SystemExecutionPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const SystemFrequency: {
  DAILY: 'DAILY',
  WEEKLY: 'WEEKLY',
  CUSTOM: 'CUSTOM'
};

export type SystemFrequency = (typeof SystemFrequency)[keyof typeof SystemFrequency]

}

export type SystemFrequency = $Enums.SystemFrequency

export const SystemFrequency: typeof $Enums.SystemFrequency

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.identityArea`: Exposes CRUD operations for the **IdentityArea** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IdentityAreas
    * const identityAreas = await prisma.identityArea.findMany()
    * ```
    */
  get identityArea(): Prisma.IdentityAreaDelegate<ExtArgs>;

  /**
   * `prisma.atomicSystem`: Exposes CRUD operations for the **AtomicSystem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AtomicSystems
    * const atomicSystems = await prisma.atomicSystem.findMany()
    * ```
    */
  get atomicSystem(): Prisma.AtomicSystemDelegate<ExtArgs>;

  /**
   * `prisma.systemExecution`: Exposes CRUD operations for the **SystemExecution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemExecutions
    * const systemExecutions = await prisma.systemExecution.findMany()
    * ```
    */
  get systemExecution(): Prisma.SystemExecutionDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    RefreshToken: 'RefreshToken',
    IdentityArea: 'IdentityArea',
    AtomicSystem: 'AtomicSystem',
    SystemExecution: 'SystemExecution'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "refreshToken" | "identityArea" | "atomicSystem" | "systemExecution"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      IdentityArea: {
        payload: Prisma.$IdentityAreaPayload<ExtArgs>
        fields: Prisma.IdentityAreaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IdentityAreaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IdentityAreaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          findFirst: {
            args: Prisma.IdentityAreaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IdentityAreaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          findMany: {
            args: Prisma.IdentityAreaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>[]
          }
          create: {
            args: Prisma.IdentityAreaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          createMany: {
            args: Prisma.IdentityAreaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IdentityAreaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>[]
          }
          delete: {
            args: Prisma.IdentityAreaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          update: {
            args: Prisma.IdentityAreaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          deleteMany: {
            args: Prisma.IdentityAreaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IdentityAreaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.IdentityAreaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityAreaPayload>
          }
          aggregate: {
            args: Prisma.IdentityAreaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIdentityArea>
          }
          groupBy: {
            args: Prisma.IdentityAreaGroupByArgs<ExtArgs>
            result: $Utils.Optional<IdentityAreaGroupByOutputType>[]
          }
          count: {
            args: Prisma.IdentityAreaCountArgs<ExtArgs>
            result: $Utils.Optional<IdentityAreaCountAggregateOutputType> | number
          }
        }
      }
      AtomicSystem: {
        payload: Prisma.$AtomicSystemPayload<ExtArgs>
        fields: Prisma.AtomicSystemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AtomicSystemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AtomicSystemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          findFirst: {
            args: Prisma.AtomicSystemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AtomicSystemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          findMany: {
            args: Prisma.AtomicSystemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>[]
          }
          create: {
            args: Prisma.AtomicSystemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          createMany: {
            args: Prisma.AtomicSystemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AtomicSystemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>[]
          }
          delete: {
            args: Prisma.AtomicSystemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          update: {
            args: Prisma.AtomicSystemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          deleteMany: {
            args: Prisma.AtomicSystemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AtomicSystemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AtomicSystemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtomicSystemPayload>
          }
          aggregate: {
            args: Prisma.AtomicSystemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAtomicSystem>
          }
          groupBy: {
            args: Prisma.AtomicSystemGroupByArgs<ExtArgs>
            result: $Utils.Optional<AtomicSystemGroupByOutputType>[]
          }
          count: {
            args: Prisma.AtomicSystemCountArgs<ExtArgs>
            result: $Utils.Optional<AtomicSystemCountAggregateOutputType> | number
          }
        }
      }
      SystemExecution: {
        payload: Prisma.$SystemExecutionPayload<ExtArgs>
        fields: Prisma.SystemExecutionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemExecutionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemExecutionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          findFirst: {
            args: Prisma.SystemExecutionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemExecutionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          findMany: {
            args: Prisma.SystemExecutionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>[]
          }
          create: {
            args: Prisma.SystemExecutionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          createMany: {
            args: Prisma.SystemExecutionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemExecutionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>[]
          }
          delete: {
            args: Prisma.SystemExecutionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          update: {
            args: Prisma.SystemExecutionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          deleteMany: {
            args: Prisma.SystemExecutionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemExecutionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SystemExecutionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemExecutionPayload>
          }
          aggregate: {
            args: Prisma.SystemExecutionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemExecution>
          }
          groupBy: {
            args: Prisma.SystemExecutionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemExecutionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemExecutionCountArgs<ExtArgs>
            result: $Utils.Optional<SystemExecutionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    identityAreas: number
    systems: number
    executions: number
    refreshTokens: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identityAreas?: boolean | UserCountOutputTypeCountIdentityAreasArgs
    systems?: boolean | UserCountOutputTypeCountSystemsArgs
    executions?: boolean | UserCountOutputTypeCountExecutionsArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountIdentityAreasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IdentityAreaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtomicSystemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountExecutionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemExecutionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type IdentityAreaCountOutputType
   */

  export type IdentityAreaCountOutputType = {
    systems: number
  }

  export type IdentityAreaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    systems?: boolean | IdentityAreaCountOutputTypeCountSystemsArgs
  }

  // Custom InputTypes
  /**
   * IdentityAreaCountOutputType without action
   */
  export type IdentityAreaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityAreaCountOutputType
     */
    select?: IdentityAreaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * IdentityAreaCountOutputType without action
   */
  export type IdentityAreaCountOutputTypeCountSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtomicSystemWhereInput
  }


  /**
   * Count Type AtomicSystemCountOutputType
   */

  export type AtomicSystemCountOutputType = {
    executions: number
  }

  export type AtomicSystemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    executions?: boolean | AtomicSystemCountOutputTypeCountExecutionsArgs
  }

  // Custom InputTypes
  /**
   * AtomicSystemCountOutputType without action
   */
  export type AtomicSystemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystemCountOutputType
     */
    select?: AtomicSystemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AtomicSystemCountOutputType without action
   */
  export type AtomicSystemCountOutputTypeCountExecutionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemExecutionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    password: string | null
    isActive: boolean | null
    isPremium: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    password: string | null
    isActive: boolean | null
    isPremium: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    password: number
    isActive: number
    isPremium: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    isActive?: true
    isPremium?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    isActive?: true
    isPremium?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    isActive?: true
    isPremium?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    name: string
    password: string
    isActive: boolean
    isPremium: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    isActive?: boolean
    isPremium?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    identityAreas?: boolean | User$identityAreasArgs<ExtArgs>
    systems?: boolean | User$systemsArgs<ExtArgs>
    executions?: boolean | User$executionsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    isActive?: boolean
    isPremium?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    isActive?: boolean
    isPremium?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identityAreas?: boolean | User$identityAreasArgs<ExtArgs>
    systems?: boolean | User$systemsArgs<ExtArgs>
    executions?: boolean | User$executionsArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      identityAreas: Prisma.$IdentityAreaPayload<ExtArgs>[]
      systems: Prisma.$AtomicSystemPayload<ExtArgs>[]
      executions: Prisma.$SystemExecutionPayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string
      password: string
      isActive: boolean
      isPremium: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    identityAreas<T extends User$identityAreasArgs<ExtArgs> = {}>(args?: Subset<T, User$identityAreasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findMany"> | Null>
    systems<T extends User$systemsArgs<ExtArgs> = {}>(args?: Subset<T, User$systemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findMany"> | Null>
    executions<T extends User$executionsArgs<ExtArgs> = {}>(args?: Subset<T, User$executionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findMany"> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isPremium: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.identityAreas
   */
  export type User$identityAreasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    where?: IdentityAreaWhereInput
    orderBy?: IdentityAreaOrderByWithRelationInput | IdentityAreaOrderByWithRelationInput[]
    cursor?: IdentityAreaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentityAreaScalarFieldEnum | IdentityAreaScalarFieldEnum[]
  }

  /**
   * User.systems
   */
  export type User$systemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    where?: AtomicSystemWhereInput
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    cursor?: AtomicSystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtomicSystemScalarFieldEnum | AtomicSystemScalarFieldEnum[]
  }

  /**
   * User.executions
   */
  export type User$executionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    where?: SystemExecutionWhereInput
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    cursor?: SystemExecutionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemExecutionScalarFieldEnum | SystemExecutionScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */ 
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model IdentityArea
   */

  export type AggregateIdentityArea = {
    _count: IdentityAreaCountAggregateOutputType | null
    _avg: IdentityAreaAvgAggregateOutputType | null
    _sum: IdentityAreaSumAggregateOutputType | null
    _min: IdentityAreaMinAggregateOutputType | null
    _max: IdentityAreaMaxAggregateOutputType | null
  }

  export type IdentityAreaAvgAggregateOutputType = {
    order: number | null
  }

  export type IdentityAreaSumAggregateOutputType = {
    order: number | null
  }

  export type IdentityAreaMinAggregateOutputType = {
    id: string | null
    userId: string | null
    name: string | null
    description: string | null
    color: string | null
    isActive: boolean | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IdentityAreaMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    name: string | null
    description: string | null
    color: string | null
    isActive: boolean | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IdentityAreaCountAggregateOutputType = {
    id: number
    userId: number
    name: number
    description: number
    color: number
    isActive: number
    order: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type IdentityAreaAvgAggregateInputType = {
    order?: true
  }

  export type IdentityAreaSumAggregateInputType = {
    order?: true
  }

  export type IdentityAreaMinAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    description?: true
    color?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IdentityAreaMaxAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    description?: true
    color?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IdentityAreaCountAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    description?: true
    color?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type IdentityAreaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityArea to aggregate.
     */
    where?: IdentityAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityAreas to fetch.
     */
    orderBy?: IdentityAreaOrderByWithRelationInput | IdentityAreaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IdentityAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityAreas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityAreas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IdentityAreas
    **/
    _count?: true | IdentityAreaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IdentityAreaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IdentityAreaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentityAreaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentityAreaMaxAggregateInputType
  }

  export type GetIdentityAreaAggregateType<T extends IdentityAreaAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentityArea]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentityArea[P]>
      : GetScalarType<T[P], AggregateIdentityArea[P]>
  }




  export type IdentityAreaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IdentityAreaWhereInput
    orderBy?: IdentityAreaOrderByWithAggregationInput | IdentityAreaOrderByWithAggregationInput[]
    by: IdentityAreaScalarFieldEnum[] | IdentityAreaScalarFieldEnum
    having?: IdentityAreaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentityAreaCountAggregateInputType | true
    _avg?: IdentityAreaAvgAggregateInputType
    _sum?: IdentityAreaSumAggregateInputType
    _min?: IdentityAreaMinAggregateInputType
    _max?: IdentityAreaMaxAggregateInputType
  }

  export type IdentityAreaGroupByOutputType = {
    id: string
    userId: string
    name: string
    description: string | null
    color: string
    isActive: boolean
    order: number
    createdAt: Date
    updatedAt: Date
    _count: IdentityAreaCountAggregateOutputType | null
    _avg: IdentityAreaAvgAggregateOutputType | null
    _sum: IdentityAreaSumAggregateOutputType | null
    _min: IdentityAreaMinAggregateOutputType | null
    _max: IdentityAreaMaxAggregateOutputType | null
  }

  type GetIdentityAreaGroupByPayload<T extends IdentityAreaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentityAreaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentityAreaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentityAreaGroupByOutputType[P]>
            : GetScalarType<T[P], IdentityAreaGroupByOutputType[P]>
        }
      >
    >


  export type IdentityAreaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    systems?: boolean | IdentityArea$systemsArgs<ExtArgs>
    _count?: boolean | IdentityAreaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identityArea"]>

  export type IdentityAreaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identityArea"]>

  export type IdentityAreaSelectScalar = {
    id?: boolean
    userId?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type IdentityAreaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    systems?: boolean | IdentityArea$systemsArgs<ExtArgs>
    _count?: boolean | IdentityAreaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type IdentityAreaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $IdentityAreaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IdentityArea"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      systems: Prisma.$AtomicSystemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      name: string
      description: string | null
      color: string
      isActive: boolean
      order: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["identityArea"]>
    composites: {}
  }

  type IdentityAreaGetPayload<S extends boolean | null | undefined | IdentityAreaDefaultArgs> = $Result.GetResult<Prisma.$IdentityAreaPayload, S>

  type IdentityAreaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<IdentityAreaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IdentityAreaCountAggregateInputType | true
    }

  export interface IdentityAreaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IdentityArea'], meta: { name: 'IdentityArea' } }
    /**
     * Find zero or one IdentityArea that matches the filter.
     * @param {IdentityAreaFindUniqueArgs} args - Arguments to find a IdentityArea
     * @example
     * // Get one IdentityArea
     * const identityArea = await prisma.identityArea.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IdentityAreaFindUniqueArgs>(args: SelectSubset<T, IdentityAreaFindUniqueArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one IdentityArea that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {IdentityAreaFindUniqueOrThrowArgs} args - Arguments to find a IdentityArea
     * @example
     * // Get one IdentityArea
     * const identityArea = await prisma.identityArea.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IdentityAreaFindUniqueOrThrowArgs>(args: SelectSubset<T, IdentityAreaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first IdentityArea that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaFindFirstArgs} args - Arguments to find a IdentityArea
     * @example
     * // Get one IdentityArea
     * const identityArea = await prisma.identityArea.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IdentityAreaFindFirstArgs>(args?: SelectSubset<T, IdentityAreaFindFirstArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first IdentityArea that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaFindFirstOrThrowArgs} args - Arguments to find a IdentityArea
     * @example
     * // Get one IdentityArea
     * const identityArea = await prisma.identityArea.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IdentityAreaFindFirstOrThrowArgs>(args?: SelectSubset<T, IdentityAreaFindFirstOrThrowArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more IdentityAreas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IdentityAreas
     * const identityAreas = await prisma.identityArea.findMany()
     * 
     * // Get first 10 IdentityAreas
     * const identityAreas = await prisma.identityArea.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const identityAreaWithIdOnly = await prisma.identityArea.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IdentityAreaFindManyArgs>(args?: SelectSubset<T, IdentityAreaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a IdentityArea.
     * @param {IdentityAreaCreateArgs} args - Arguments to create a IdentityArea.
     * @example
     * // Create one IdentityArea
     * const IdentityArea = await prisma.identityArea.create({
     *   data: {
     *     // ... data to create a IdentityArea
     *   }
     * })
     * 
     */
    create<T extends IdentityAreaCreateArgs>(args: SelectSubset<T, IdentityAreaCreateArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many IdentityAreas.
     * @param {IdentityAreaCreateManyArgs} args - Arguments to create many IdentityAreas.
     * @example
     * // Create many IdentityAreas
     * const identityArea = await prisma.identityArea.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IdentityAreaCreateManyArgs>(args?: SelectSubset<T, IdentityAreaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IdentityAreas and returns the data saved in the database.
     * @param {IdentityAreaCreateManyAndReturnArgs} args - Arguments to create many IdentityAreas.
     * @example
     * // Create many IdentityAreas
     * const identityArea = await prisma.identityArea.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IdentityAreas and only return the `id`
     * const identityAreaWithIdOnly = await prisma.identityArea.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IdentityAreaCreateManyAndReturnArgs>(args?: SelectSubset<T, IdentityAreaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a IdentityArea.
     * @param {IdentityAreaDeleteArgs} args - Arguments to delete one IdentityArea.
     * @example
     * // Delete one IdentityArea
     * const IdentityArea = await prisma.identityArea.delete({
     *   where: {
     *     // ... filter to delete one IdentityArea
     *   }
     * })
     * 
     */
    delete<T extends IdentityAreaDeleteArgs>(args: SelectSubset<T, IdentityAreaDeleteArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one IdentityArea.
     * @param {IdentityAreaUpdateArgs} args - Arguments to update one IdentityArea.
     * @example
     * // Update one IdentityArea
     * const identityArea = await prisma.identityArea.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IdentityAreaUpdateArgs>(args: SelectSubset<T, IdentityAreaUpdateArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more IdentityAreas.
     * @param {IdentityAreaDeleteManyArgs} args - Arguments to filter IdentityAreas to delete.
     * @example
     * // Delete a few IdentityAreas
     * const { count } = await prisma.identityArea.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IdentityAreaDeleteManyArgs>(args?: SelectSubset<T, IdentityAreaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IdentityAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IdentityAreas
     * const identityArea = await prisma.identityArea.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IdentityAreaUpdateManyArgs>(args: SelectSubset<T, IdentityAreaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IdentityArea.
     * @param {IdentityAreaUpsertArgs} args - Arguments to update or create a IdentityArea.
     * @example
     * // Update or create a IdentityArea
     * const identityArea = await prisma.identityArea.upsert({
     *   create: {
     *     // ... data to create a IdentityArea
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IdentityArea we want to update
     *   }
     * })
     */
    upsert<T extends IdentityAreaUpsertArgs>(args: SelectSubset<T, IdentityAreaUpsertArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of IdentityAreas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaCountArgs} args - Arguments to filter IdentityAreas to count.
     * @example
     * // Count the number of IdentityAreas
     * const count = await prisma.identityArea.count({
     *   where: {
     *     // ... the filter for the IdentityAreas we want to count
     *   }
     * })
    **/
    count<T extends IdentityAreaCountArgs>(
      args?: Subset<T, IdentityAreaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentityAreaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IdentityArea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentityAreaAggregateArgs>(args: Subset<T, IdentityAreaAggregateArgs>): Prisma.PrismaPromise<GetIdentityAreaAggregateType<T>>

    /**
     * Group by IdentityArea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityAreaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IdentityAreaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IdentityAreaGroupByArgs['orderBy'] }
        : { orderBy?: IdentityAreaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IdentityAreaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentityAreaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IdentityArea model
   */
  readonly fields: IdentityAreaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IdentityArea.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IdentityAreaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    systems<T extends IdentityArea$systemsArgs<ExtArgs> = {}>(args?: Subset<T, IdentityArea$systemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IdentityArea model
   */ 
  interface IdentityAreaFieldRefs {
    readonly id: FieldRef<"IdentityArea", 'String'>
    readonly userId: FieldRef<"IdentityArea", 'String'>
    readonly name: FieldRef<"IdentityArea", 'String'>
    readonly description: FieldRef<"IdentityArea", 'String'>
    readonly color: FieldRef<"IdentityArea", 'String'>
    readonly isActive: FieldRef<"IdentityArea", 'Boolean'>
    readonly order: FieldRef<"IdentityArea", 'Int'>
    readonly createdAt: FieldRef<"IdentityArea", 'DateTime'>
    readonly updatedAt: FieldRef<"IdentityArea", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * IdentityArea findUnique
   */
  export type IdentityAreaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter, which IdentityArea to fetch.
     */
    where: IdentityAreaWhereUniqueInput
  }

  /**
   * IdentityArea findUniqueOrThrow
   */
  export type IdentityAreaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter, which IdentityArea to fetch.
     */
    where: IdentityAreaWhereUniqueInput
  }

  /**
   * IdentityArea findFirst
   */
  export type IdentityAreaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter, which IdentityArea to fetch.
     */
    where?: IdentityAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityAreas to fetch.
     */
    orderBy?: IdentityAreaOrderByWithRelationInput | IdentityAreaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityAreas.
     */
    cursor?: IdentityAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityAreas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityAreas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityAreas.
     */
    distinct?: IdentityAreaScalarFieldEnum | IdentityAreaScalarFieldEnum[]
  }

  /**
   * IdentityArea findFirstOrThrow
   */
  export type IdentityAreaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter, which IdentityArea to fetch.
     */
    where?: IdentityAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityAreas to fetch.
     */
    orderBy?: IdentityAreaOrderByWithRelationInput | IdentityAreaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityAreas.
     */
    cursor?: IdentityAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityAreas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityAreas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityAreas.
     */
    distinct?: IdentityAreaScalarFieldEnum | IdentityAreaScalarFieldEnum[]
  }

  /**
   * IdentityArea findMany
   */
  export type IdentityAreaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter, which IdentityAreas to fetch.
     */
    where?: IdentityAreaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityAreas to fetch.
     */
    orderBy?: IdentityAreaOrderByWithRelationInput | IdentityAreaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IdentityAreas.
     */
    cursor?: IdentityAreaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityAreas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityAreas.
     */
    skip?: number
    distinct?: IdentityAreaScalarFieldEnum | IdentityAreaScalarFieldEnum[]
  }

  /**
   * IdentityArea create
   */
  export type IdentityAreaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * The data needed to create a IdentityArea.
     */
    data: XOR<IdentityAreaCreateInput, IdentityAreaUncheckedCreateInput>
  }

  /**
   * IdentityArea createMany
   */
  export type IdentityAreaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IdentityAreas.
     */
    data: IdentityAreaCreateManyInput | IdentityAreaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IdentityArea createManyAndReturn
   */
  export type IdentityAreaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many IdentityAreas.
     */
    data: IdentityAreaCreateManyInput | IdentityAreaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * IdentityArea update
   */
  export type IdentityAreaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * The data needed to update a IdentityArea.
     */
    data: XOR<IdentityAreaUpdateInput, IdentityAreaUncheckedUpdateInput>
    /**
     * Choose, which IdentityArea to update.
     */
    where: IdentityAreaWhereUniqueInput
  }

  /**
   * IdentityArea updateMany
   */
  export type IdentityAreaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IdentityAreas.
     */
    data: XOR<IdentityAreaUpdateManyMutationInput, IdentityAreaUncheckedUpdateManyInput>
    /**
     * Filter which IdentityAreas to update
     */
    where?: IdentityAreaWhereInput
  }

  /**
   * IdentityArea upsert
   */
  export type IdentityAreaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * The filter to search for the IdentityArea to update in case it exists.
     */
    where: IdentityAreaWhereUniqueInput
    /**
     * In case the IdentityArea found by the `where` argument doesn't exist, create a new IdentityArea with this data.
     */
    create: XOR<IdentityAreaCreateInput, IdentityAreaUncheckedCreateInput>
    /**
     * In case the IdentityArea was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IdentityAreaUpdateInput, IdentityAreaUncheckedUpdateInput>
  }

  /**
   * IdentityArea delete
   */
  export type IdentityAreaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
    /**
     * Filter which IdentityArea to delete.
     */
    where: IdentityAreaWhereUniqueInput
  }

  /**
   * IdentityArea deleteMany
   */
  export type IdentityAreaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityAreas to delete
     */
    where?: IdentityAreaWhereInput
  }

  /**
   * IdentityArea.systems
   */
  export type IdentityArea$systemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    where?: AtomicSystemWhereInput
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    cursor?: AtomicSystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtomicSystemScalarFieldEnum | AtomicSystemScalarFieldEnum[]
  }

  /**
   * IdentityArea without action
   */
  export type IdentityAreaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityArea
     */
    select?: IdentityAreaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityAreaInclude<ExtArgs> | null
  }


  /**
   * Model AtomicSystem
   */

  export type AggregateAtomicSystem = {
    _count: AtomicSystemCountAggregateOutputType | null
    _avg: AtomicSystemAvgAggregateOutputType | null
    _sum: AtomicSystemSumAggregateOutputType | null
    _min: AtomicSystemMinAggregateOutputType | null
    _max: AtomicSystemMaxAggregateOutputType | null
  }

  export type AtomicSystemAvgAggregateOutputType = {
    estimatedMin: number | null
    difficulty: number | null
    order: number | null
  }

  export type AtomicSystemSumAggregateOutputType = {
    estimatedMin: number | null
    difficulty: number | null
    order: number | null
  }

  export type AtomicSystemMinAggregateOutputType = {
    id: string | null
    userId: string | null
    identityAreaId: string | null
    name: string | null
    description: string | null
    cue: string | null
    craving: string | null
    response: string | null
    reward: string | null
    frequency: $Enums.SystemFrequency | null
    timeOfDay: string | null
    estimatedMin: number | null
    difficulty: number | null
    isActive: boolean | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AtomicSystemMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    identityAreaId: string | null
    name: string | null
    description: string | null
    cue: string | null
    craving: string | null
    response: string | null
    reward: string | null
    frequency: $Enums.SystemFrequency | null
    timeOfDay: string | null
    estimatedMin: number | null
    difficulty: number | null
    isActive: boolean | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AtomicSystemCountAggregateOutputType = {
    id: number
    userId: number
    identityAreaId: number
    name: number
    description: number
    cue: number
    craving: number
    response: number
    reward: number
    frequency: number
    timeOfDay: number
    estimatedMin: number
    difficulty: number
    isActive: number
    order: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AtomicSystemAvgAggregateInputType = {
    estimatedMin?: true
    difficulty?: true
    order?: true
  }

  export type AtomicSystemSumAggregateInputType = {
    estimatedMin?: true
    difficulty?: true
    order?: true
  }

  export type AtomicSystemMinAggregateInputType = {
    id?: true
    userId?: true
    identityAreaId?: true
    name?: true
    description?: true
    cue?: true
    craving?: true
    response?: true
    reward?: true
    frequency?: true
    timeOfDay?: true
    estimatedMin?: true
    difficulty?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AtomicSystemMaxAggregateInputType = {
    id?: true
    userId?: true
    identityAreaId?: true
    name?: true
    description?: true
    cue?: true
    craving?: true
    response?: true
    reward?: true
    frequency?: true
    timeOfDay?: true
    estimatedMin?: true
    difficulty?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AtomicSystemCountAggregateInputType = {
    id?: true
    userId?: true
    identityAreaId?: true
    name?: true
    description?: true
    cue?: true
    craving?: true
    response?: true
    reward?: true
    frequency?: true
    timeOfDay?: true
    estimatedMin?: true
    difficulty?: true
    isActive?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AtomicSystemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtomicSystem to aggregate.
     */
    where?: AtomicSystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtomicSystems to fetch.
     */
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AtomicSystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtomicSystems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtomicSystems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AtomicSystems
    **/
    _count?: true | AtomicSystemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AtomicSystemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AtomicSystemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtomicSystemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtomicSystemMaxAggregateInputType
  }

  export type GetAtomicSystemAggregateType<T extends AtomicSystemAggregateArgs> = {
        [P in keyof T & keyof AggregateAtomicSystem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtomicSystem[P]>
      : GetScalarType<T[P], AggregateAtomicSystem[P]>
  }




  export type AtomicSystemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtomicSystemWhereInput
    orderBy?: AtomicSystemOrderByWithAggregationInput | AtomicSystemOrderByWithAggregationInput[]
    by: AtomicSystemScalarFieldEnum[] | AtomicSystemScalarFieldEnum
    having?: AtomicSystemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtomicSystemCountAggregateInputType | true
    _avg?: AtomicSystemAvgAggregateInputType
    _sum?: AtomicSystemSumAggregateInputType
    _min?: AtomicSystemMinAggregateInputType
    _max?: AtomicSystemMaxAggregateInputType
  }

  export type AtomicSystemGroupByOutputType = {
    id: string
    userId: string
    identityAreaId: string
    name: string
    description: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency: $Enums.SystemFrequency
    timeOfDay: string | null
    estimatedMin: number | null
    difficulty: number
    isActive: boolean
    order: number
    createdAt: Date
    updatedAt: Date
    _count: AtomicSystemCountAggregateOutputType | null
    _avg: AtomicSystemAvgAggregateOutputType | null
    _sum: AtomicSystemSumAggregateOutputType | null
    _min: AtomicSystemMinAggregateOutputType | null
    _max: AtomicSystemMaxAggregateOutputType | null
  }

  type GetAtomicSystemGroupByPayload<T extends AtomicSystemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtomicSystemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtomicSystemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtomicSystemGroupByOutputType[P]>
            : GetScalarType<T[P], AtomicSystemGroupByOutputType[P]>
        }
      >
    >


  export type AtomicSystemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    identityAreaId?: boolean
    name?: boolean
    description?: boolean
    cue?: boolean
    craving?: boolean
    response?: boolean
    reward?: boolean
    frequency?: boolean
    timeOfDay?: boolean
    estimatedMin?: boolean
    difficulty?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    identityArea?: boolean | IdentityAreaDefaultArgs<ExtArgs>
    executions?: boolean | AtomicSystem$executionsArgs<ExtArgs>
    _count?: boolean | AtomicSystemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["atomicSystem"]>

  export type AtomicSystemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    identityAreaId?: boolean
    name?: boolean
    description?: boolean
    cue?: boolean
    craving?: boolean
    response?: boolean
    reward?: boolean
    frequency?: boolean
    timeOfDay?: boolean
    estimatedMin?: boolean
    difficulty?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    identityArea?: boolean | IdentityAreaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["atomicSystem"]>

  export type AtomicSystemSelectScalar = {
    id?: boolean
    userId?: boolean
    identityAreaId?: boolean
    name?: boolean
    description?: boolean
    cue?: boolean
    craving?: boolean
    response?: boolean
    reward?: boolean
    frequency?: boolean
    timeOfDay?: boolean
    estimatedMin?: boolean
    difficulty?: boolean
    isActive?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AtomicSystemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    identityArea?: boolean | IdentityAreaDefaultArgs<ExtArgs>
    executions?: boolean | AtomicSystem$executionsArgs<ExtArgs>
    _count?: boolean | AtomicSystemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AtomicSystemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    identityArea?: boolean | IdentityAreaDefaultArgs<ExtArgs>
  }

  export type $AtomicSystemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AtomicSystem"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      identityArea: Prisma.$IdentityAreaPayload<ExtArgs>
      executions: Prisma.$SystemExecutionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      identityAreaId: string
      name: string
      description: string | null
      cue: string
      craving: string
      response: string
      reward: string
      frequency: $Enums.SystemFrequency
      timeOfDay: string | null
      estimatedMin: number | null
      difficulty: number
      isActive: boolean
      order: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["atomicSystem"]>
    composites: {}
  }

  type AtomicSystemGetPayload<S extends boolean | null | undefined | AtomicSystemDefaultArgs> = $Result.GetResult<Prisma.$AtomicSystemPayload, S>

  type AtomicSystemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AtomicSystemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AtomicSystemCountAggregateInputType | true
    }

  export interface AtomicSystemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AtomicSystem'], meta: { name: 'AtomicSystem' } }
    /**
     * Find zero or one AtomicSystem that matches the filter.
     * @param {AtomicSystemFindUniqueArgs} args - Arguments to find a AtomicSystem
     * @example
     * // Get one AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AtomicSystemFindUniqueArgs>(args: SelectSubset<T, AtomicSystemFindUniqueArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AtomicSystem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AtomicSystemFindUniqueOrThrowArgs} args - Arguments to find a AtomicSystem
     * @example
     * // Get one AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AtomicSystemFindUniqueOrThrowArgs>(args: SelectSubset<T, AtomicSystemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AtomicSystem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemFindFirstArgs} args - Arguments to find a AtomicSystem
     * @example
     * // Get one AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AtomicSystemFindFirstArgs>(args?: SelectSubset<T, AtomicSystemFindFirstArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AtomicSystem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemFindFirstOrThrowArgs} args - Arguments to find a AtomicSystem
     * @example
     * // Get one AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AtomicSystemFindFirstOrThrowArgs>(args?: SelectSubset<T, AtomicSystemFindFirstOrThrowArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AtomicSystems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AtomicSystems
     * const atomicSystems = await prisma.atomicSystem.findMany()
     * 
     * // Get first 10 AtomicSystems
     * const atomicSystems = await prisma.atomicSystem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const atomicSystemWithIdOnly = await prisma.atomicSystem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AtomicSystemFindManyArgs>(args?: SelectSubset<T, AtomicSystemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AtomicSystem.
     * @param {AtomicSystemCreateArgs} args - Arguments to create a AtomicSystem.
     * @example
     * // Create one AtomicSystem
     * const AtomicSystem = await prisma.atomicSystem.create({
     *   data: {
     *     // ... data to create a AtomicSystem
     *   }
     * })
     * 
     */
    create<T extends AtomicSystemCreateArgs>(args: SelectSubset<T, AtomicSystemCreateArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AtomicSystems.
     * @param {AtomicSystemCreateManyArgs} args - Arguments to create many AtomicSystems.
     * @example
     * // Create many AtomicSystems
     * const atomicSystem = await prisma.atomicSystem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AtomicSystemCreateManyArgs>(args?: SelectSubset<T, AtomicSystemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AtomicSystems and returns the data saved in the database.
     * @param {AtomicSystemCreateManyAndReturnArgs} args - Arguments to create many AtomicSystems.
     * @example
     * // Create many AtomicSystems
     * const atomicSystem = await prisma.atomicSystem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AtomicSystems and only return the `id`
     * const atomicSystemWithIdOnly = await prisma.atomicSystem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AtomicSystemCreateManyAndReturnArgs>(args?: SelectSubset<T, AtomicSystemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AtomicSystem.
     * @param {AtomicSystemDeleteArgs} args - Arguments to delete one AtomicSystem.
     * @example
     * // Delete one AtomicSystem
     * const AtomicSystem = await prisma.atomicSystem.delete({
     *   where: {
     *     // ... filter to delete one AtomicSystem
     *   }
     * })
     * 
     */
    delete<T extends AtomicSystemDeleteArgs>(args: SelectSubset<T, AtomicSystemDeleteArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AtomicSystem.
     * @param {AtomicSystemUpdateArgs} args - Arguments to update one AtomicSystem.
     * @example
     * // Update one AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AtomicSystemUpdateArgs>(args: SelectSubset<T, AtomicSystemUpdateArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AtomicSystems.
     * @param {AtomicSystemDeleteManyArgs} args - Arguments to filter AtomicSystems to delete.
     * @example
     * // Delete a few AtomicSystems
     * const { count } = await prisma.atomicSystem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AtomicSystemDeleteManyArgs>(args?: SelectSubset<T, AtomicSystemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AtomicSystems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AtomicSystems
     * const atomicSystem = await prisma.atomicSystem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AtomicSystemUpdateManyArgs>(args: SelectSubset<T, AtomicSystemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AtomicSystem.
     * @param {AtomicSystemUpsertArgs} args - Arguments to update or create a AtomicSystem.
     * @example
     * // Update or create a AtomicSystem
     * const atomicSystem = await prisma.atomicSystem.upsert({
     *   create: {
     *     // ... data to create a AtomicSystem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AtomicSystem we want to update
     *   }
     * })
     */
    upsert<T extends AtomicSystemUpsertArgs>(args: SelectSubset<T, AtomicSystemUpsertArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AtomicSystems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemCountArgs} args - Arguments to filter AtomicSystems to count.
     * @example
     * // Count the number of AtomicSystems
     * const count = await prisma.atomicSystem.count({
     *   where: {
     *     // ... the filter for the AtomicSystems we want to count
     *   }
     * })
    **/
    count<T extends AtomicSystemCountArgs>(
      args?: Subset<T, AtomicSystemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtomicSystemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AtomicSystem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtomicSystemAggregateArgs>(args: Subset<T, AtomicSystemAggregateArgs>): Prisma.PrismaPromise<GetAtomicSystemAggregateType<T>>

    /**
     * Group by AtomicSystem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtomicSystemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AtomicSystemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AtomicSystemGroupByArgs['orderBy'] }
        : { orderBy?: AtomicSystemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AtomicSystemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtomicSystemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AtomicSystem model
   */
  readonly fields: AtomicSystemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AtomicSystem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AtomicSystemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    identityArea<T extends IdentityAreaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, IdentityAreaDefaultArgs<ExtArgs>>): Prisma__IdentityAreaClient<$Result.GetResult<Prisma.$IdentityAreaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    executions<T extends AtomicSystem$executionsArgs<ExtArgs> = {}>(args?: Subset<T, AtomicSystem$executionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AtomicSystem model
   */ 
  interface AtomicSystemFieldRefs {
    readonly id: FieldRef<"AtomicSystem", 'String'>
    readonly userId: FieldRef<"AtomicSystem", 'String'>
    readonly identityAreaId: FieldRef<"AtomicSystem", 'String'>
    readonly name: FieldRef<"AtomicSystem", 'String'>
    readonly description: FieldRef<"AtomicSystem", 'String'>
    readonly cue: FieldRef<"AtomicSystem", 'String'>
    readonly craving: FieldRef<"AtomicSystem", 'String'>
    readonly response: FieldRef<"AtomicSystem", 'String'>
    readonly reward: FieldRef<"AtomicSystem", 'String'>
    readonly frequency: FieldRef<"AtomicSystem", 'SystemFrequency'>
    readonly timeOfDay: FieldRef<"AtomicSystem", 'String'>
    readonly estimatedMin: FieldRef<"AtomicSystem", 'Int'>
    readonly difficulty: FieldRef<"AtomicSystem", 'Int'>
    readonly isActive: FieldRef<"AtomicSystem", 'Boolean'>
    readonly order: FieldRef<"AtomicSystem", 'Int'>
    readonly createdAt: FieldRef<"AtomicSystem", 'DateTime'>
    readonly updatedAt: FieldRef<"AtomicSystem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AtomicSystem findUnique
   */
  export type AtomicSystemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter, which AtomicSystem to fetch.
     */
    where: AtomicSystemWhereUniqueInput
  }

  /**
   * AtomicSystem findUniqueOrThrow
   */
  export type AtomicSystemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter, which AtomicSystem to fetch.
     */
    where: AtomicSystemWhereUniqueInput
  }

  /**
   * AtomicSystem findFirst
   */
  export type AtomicSystemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter, which AtomicSystem to fetch.
     */
    where?: AtomicSystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtomicSystems to fetch.
     */
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtomicSystems.
     */
    cursor?: AtomicSystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtomicSystems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtomicSystems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtomicSystems.
     */
    distinct?: AtomicSystemScalarFieldEnum | AtomicSystemScalarFieldEnum[]
  }

  /**
   * AtomicSystem findFirstOrThrow
   */
  export type AtomicSystemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter, which AtomicSystem to fetch.
     */
    where?: AtomicSystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtomicSystems to fetch.
     */
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtomicSystems.
     */
    cursor?: AtomicSystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtomicSystems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtomicSystems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtomicSystems.
     */
    distinct?: AtomicSystemScalarFieldEnum | AtomicSystemScalarFieldEnum[]
  }

  /**
   * AtomicSystem findMany
   */
  export type AtomicSystemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter, which AtomicSystems to fetch.
     */
    where?: AtomicSystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtomicSystems to fetch.
     */
    orderBy?: AtomicSystemOrderByWithRelationInput | AtomicSystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AtomicSystems.
     */
    cursor?: AtomicSystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtomicSystems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtomicSystems.
     */
    skip?: number
    distinct?: AtomicSystemScalarFieldEnum | AtomicSystemScalarFieldEnum[]
  }

  /**
   * AtomicSystem create
   */
  export type AtomicSystemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * The data needed to create a AtomicSystem.
     */
    data: XOR<AtomicSystemCreateInput, AtomicSystemUncheckedCreateInput>
  }

  /**
   * AtomicSystem createMany
   */
  export type AtomicSystemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AtomicSystems.
     */
    data: AtomicSystemCreateManyInput | AtomicSystemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AtomicSystem createManyAndReturn
   */
  export type AtomicSystemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AtomicSystems.
     */
    data: AtomicSystemCreateManyInput | AtomicSystemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AtomicSystem update
   */
  export type AtomicSystemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * The data needed to update a AtomicSystem.
     */
    data: XOR<AtomicSystemUpdateInput, AtomicSystemUncheckedUpdateInput>
    /**
     * Choose, which AtomicSystem to update.
     */
    where: AtomicSystemWhereUniqueInput
  }

  /**
   * AtomicSystem updateMany
   */
  export type AtomicSystemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AtomicSystems.
     */
    data: XOR<AtomicSystemUpdateManyMutationInput, AtomicSystemUncheckedUpdateManyInput>
    /**
     * Filter which AtomicSystems to update
     */
    where?: AtomicSystemWhereInput
  }

  /**
   * AtomicSystem upsert
   */
  export type AtomicSystemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * The filter to search for the AtomicSystem to update in case it exists.
     */
    where: AtomicSystemWhereUniqueInput
    /**
     * In case the AtomicSystem found by the `where` argument doesn't exist, create a new AtomicSystem with this data.
     */
    create: XOR<AtomicSystemCreateInput, AtomicSystemUncheckedCreateInput>
    /**
     * In case the AtomicSystem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AtomicSystemUpdateInput, AtomicSystemUncheckedUpdateInput>
  }

  /**
   * AtomicSystem delete
   */
  export type AtomicSystemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
    /**
     * Filter which AtomicSystem to delete.
     */
    where: AtomicSystemWhereUniqueInput
  }

  /**
   * AtomicSystem deleteMany
   */
  export type AtomicSystemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtomicSystems to delete
     */
    where?: AtomicSystemWhereInput
  }

  /**
   * AtomicSystem.executions
   */
  export type AtomicSystem$executionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    where?: SystemExecutionWhereInput
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    cursor?: SystemExecutionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemExecutionScalarFieldEnum | SystemExecutionScalarFieldEnum[]
  }

  /**
   * AtomicSystem without action
   */
  export type AtomicSystemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtomicSystem
     */
    select?: AtomicSystemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtomicSystemInclude<ExtArgs> | null
  }


  /**
   * Model SystemExecution
   */

  export type AggregateSystemExecution = {
    _count: SystemExecutionCountAggregateOutputType | null
    _avg: SystemExecutionAvgAggregateOutputType | null
    _sum: SystemExecutionSumAggregateOutputType | null
    _min: SystemExecutionMinAggregateOutputType | null
    _max: SystemExecutionMaxAggregateOutputType | null
  }

  export type SystemExecutionAvgAggregateOutputType = {
    quality: number | null
  }

  export type SystemExecutionSumAggregateOutputType = {
    quality: number | null
  }

  export type SystemExecutionMinAggregateOutputType = {
    id: string | null
    systemId: string | null
    userId: string | null
    executedAt: Date | null
    quality: number | null
    notes: string | null
    strengthensIdentity: boolean | null
    mood: string | null
    energy: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemExecutionMaxAggregateOutputType = {
    id: string | null
    systemId: string | null
    userId: string | null
    executedAt: Date | null
    quality: number | null
    notes: string | null
    strengthensIdentity: boolean | null
    mood: string | null
    energy: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemExecutionCountAggregateOutputType = {
    id: number
    systemId: number
    userId: number
    executedAt: number
    quality: number
    notes: number
    strengthensIdentity: number
    mood: number
    energy: number
    location: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SystemExecutionAvgAggregateInputType = {
    quality?: true
  }

  export type SystemExecutionSumAggregateInputType = {
    quality?: true
  }

  export type SystemExecutionMinAggregateInputType = {
    id?: true
    systemId?: true
    userId?: true
    executedAt?: true
    quality?: true
    notes?: true
    strengthensIdentity?: true
    mood?: true
    energy?: true
    location?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemExecutionMaxAggregateInputType = {
    id?: true
    systemId?: true
    userId?: true
    executedAt?: true
    quality?: true
    notes?: true
    strengthensIdentity?: true
    mood?: true
    energy?: true
    location?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemExecutionCountAggregateInputType = {
    id?: true
    systemId?: true
    userId?: true
    executedAt?: true
    quality?: true
    notes?: true
    strengthensIdentity?: true
    mood?: true
    energy?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SystemExecutionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemExecution to aggregate.
     */
    where?: SystemExecutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemExecutions to fetch.
     */
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemExecutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemExecutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemExecutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemExecutions
    **/
    _count?: true | SystemExecutionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SystemExecutionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SystemExecutionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemExecutionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemExecutionMaxAggregateInputType
  }

  export type GetSystemExecutionAggregateType<T extends SystemExecutionAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemExecution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemExecution[P]>
      : GetScalarType<T[P], AggregateSystemExecution[P]>
  }




  export type SystemExecutionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemExecutionWhereInput
    orderBy?: SystemExecutionOrderByWithAggregationInput | SystemExecutionOrderByWithAggregationInput[]
    by: SystemExecutionScalarFieldEnum[] | SystemExecutionScalarFieldEnum
    having?: SystemExecutionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemExecutionCountAggregateInputType | true
    _avg?: SystemExecutionAvgAggregateInputType
    _sum?: SystemExecutionSumAggregateInputType
    _min?: SystemExecutionMinAggregateInputType
    _max?: SystemExecutionMaxAggregateInputType
  }

  export type SystemExecutionGroupByOutputType = {
    id: string
    systemId: string
    userId: string
    executedAt: Date
    quality: number
    notes: string | null
    strengthensIdentity: boolean
    mood: string | null
    energy: string | null
    location: string | null
    createdAt: Date
    updatedAt: Date
    _count: SystemExecutionCountAggregateOutputType | null
    _avg: SystemExecutionAvgAggregateOutputType | null
    _sum: SystemExecutionSumAggregateOutputType | null
    _min: SystemExecutionMinAggregateOutputType | null
    _max: SystemExecutionMaxAggregateOutputType | null
  }

  type GetSystemExecutionGroupByPayload<T extends SystemExecutionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemExecutionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemExecutionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemExecutionGroupByOutputType[P]>
            : GetScalarType<T[P], SystemExecutionGroupByOutputType[P]>
        }
      >
    >


  export type SystemExecutionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    systemId?: boolean
    userId?: boolean
    executedAt?: boolean
    quality?: boolean
    notes?: boolean
    strengthensIdentity?: boolean
    mood?: boolean
    energy?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    system?: boolean | AtomicSystemDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemExecution"]>

  export type SystemExecutionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    systemId?: boolean
    userId?: boolean
    executedAt?: boolean
    quality?: boolean
    notes?: boolean
    strengthensIdentity?: boolean
    mood?: boolean
    energy?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    system?: boolean | AtomicSystemDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemExecution"]>

  export type SystemExecutionSelectScalar = {
    id?: boolean
    systemId?: boolean
    userId?: boolean
    executedAt?: boolean
    quality?: boolean
    notes?: boolean
    strengthensIdentity?: boolean
    mood?: boolean
    energy?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SystemExecutionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | AtomicSystemDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SystemExecutionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | AtomicSystemDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SystemExecutionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemExecution"
    objects: {
      system: Prisma.$AtomicSystemPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      systemId: string
      userId: string
      executedAt: Date
      quality: number
      notes: string | null
      strengthensIdentity: boolean
      mood: string | null
      energy: string | null
      location: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["systemExecution"]>
    composites: {}
  }

  type SystemExecutionGetPayload<S extends boolean | null | undefined | SystemExecutionDefaultArgs> = $Result.GetResult<Prisma.$SystemExecutionPayload, S>

  type SystemExecutionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SystemExecutionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SystemExecutionCountAggregateInputType | true
    }

  export interface SystemExecutionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemExecution'], meta: { name: 'SystemExecution' } }
    /**
     * Find zero or one SystemExecution that matches the filter.
     * @param {SystemExecutionFindUniqueArgs} args - Arguments to find a SystemExecution
     * @example
     * // Get one SystemExecution
     * const systemExecution = await prisma.systemExecution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemExecutionFindUniqueArgs>(args: SelectSubset<T, SystemExecutionFindUniqueArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SystemExecution that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SystemExecutionFindUniqueOrThrowArgs} args - Arguments to find a SystemExecution
     * @example
     * // Get one SystemExecution
     * const systemExecution = await prisma.systemExecution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemExecutionFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemExecutionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SystemExecution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionFindFirstArgs} args - Arguments to find a SystemExecution
     * @example
     * // Get one SystemExecution
     * const systemExecution = await prisma.systemExecution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemExecutionFindFirstArgs>(args?: SelectSubset<T, SystemExecutionFindFirstArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SystemExecution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionFindFirstOrThrowArgs} args - Arguments to find a SystemExecution
     * @example
     * // Get one SystemExecution
     * const systemExecution = await prisma.systemExecution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemExecutionFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemExecutionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SystemExecutions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemExecutions
     * const systemExecutions = await prisma.systemExecution.findMany()
     * 
     * // Get first 10 SystemExecutions
     * const systemExecutions = await prisma.systemExecution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemExecutionWithIdOnly = await prisma.systemExecution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemExecutionFindManyArgs>(args?: SelectSubset<T, SystemExecutionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SystemExecution.
     * @param {SystemExecutionCreateArgs} args - Arguments to create a SystemExecution.
     * @example
     * // Create one SystemExecution
     * const SystemExecution = await prisma.systemExecution.create({
     *   data: {
     *     // ... data to create a SystemExecution
     *   }
     * })
     * 
     */
    create<T extends SystemExecutionCreateArgs>(args: SelectSubset<T, SystemExecutionCreateArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SystemExecutions.
     * @param {SystemExecutionCreateManyArgs} args - Arguments to create many SystemExecutions.
     * @example
     * // Create many SystemExecutions
     * const systemExecution = await prisma.systemExecution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemExecutionCreateManyArgs>(args?: SelectSubset<T, SystemExecutionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemExecutions and returns the data saved in the database.
     * @param {SystemExecutionCreateManyAndReturnArgs} args - Arguments to create many SystemExecutions.
     * @example
     * // Create many SystemExecutions
     * const systemExecution = await prisma.systemExecution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemExecutions and only return the `id`
     * const systemExecutionWithIdOnly = await prisma.systemExecution.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemExecutionCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemExecutionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SystemExecution.
     * @param {SystemExecutionDeleteArgs} args - Arguments to delete one SystemExecution.
     * @example
     * // Delete one SystemExecution
     * const SystemExecution = await prisma.systemExecution.delete({
     *   where: {
     *     // ... filter to delete one SystemExecution
     *   }
     * })
     * 
     */
    delete<T extends SystemExecutionDeleteArgs>(args: SelectSubset<T, SystemExecutionDeleteArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SystemExecution.
     * @param {SystemExecutionUpdateArgs} args - Arguments to update one SystemExecution.
     * @example
     * // Update one SystemExecution
     * const systemExecution = await prisma.systemExecution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemExecutionUpdateArgs>(args: SelectSubset<T, SystemExecutionUpdateArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SystemExecutions.
     * @param {SystemExecutionDeleteManyArgs} args - Arguments to filter SystemExecutions to delete.
     * @example
     * // Delete a few SystemExecutions
     * const { count } = await prisma.systemExecution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemExecutionDeleteManyArgs>(args?: SelectSubset<T, SystemExecutionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemExecutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemExecutions
     * const systemExecution = await prisma.systemExecution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemExecutionUpdateManyArgs>(args: SelectSubset<T, SystemExecutionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SystemExecution.
     * @param {SystemExecutionUpsertArgs} args - Arguments to update or create a SystemExecution.
     * @example
     * // Update or create a SystemExecution
     * const systemExecution = await prisma.systemExecution.upsert({
     *   create: {
     *     // ... data to create a SystemExecution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemExecution we want to update
     *   }
     * })
     */
    upsert<T extends SystemExecutionUpsertArgs>(args: SelectSubset<T, SystemExecutionUpsertArgs<ExtArgs>>): Prisma__SystemExecutionClient<$Result.GetResult<Prisma.$SystemExecutionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SystemExecutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionCountArgs} args - Arguments to filter SystemExecutions to count.
     * @example
     * // Count the number of SystemExecutions
     * const count = await prisma.systemExecution.count({
     *   where: {
     *     // ... the filter for the SystemExecutions we want to count
     *   }
     * })
    **/
    count<T extends SystemExecutionCountArgs>(
      args?: Subset<T, SystemExecutionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemExecutionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemExecution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemExecutionAggregateArgs>(args: Subset<T, SystemExecutionAggregateArgs>): Prisma.PrismaPromise<GetSystemExecutionAggregateType<T>>

    /**
     * Group by SystemExecution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemExecutionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemExecutionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemExecutionGroupByArgs['orderBy'] }
        : { orderBy?: SystemExecutionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemExecutionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemExecutionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemExecution model
   */
  readonly fields: SystemExecutionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemExecution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemExecutionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    system<T extends AtomicSystemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AtomicSystemDefaultArgs<ExtArgs>>): Prisma__AtomicSystemClient<$Result.GetResult<Prisma.$AtomicSystemPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemExecution model
   */ 
  interface SystemExecutionFieldRefs {
    readonly id: FieldRef<"SystemExecution", 'String'>
    readonly systemId: FieldRef<"SystemExecution", 'String'>
    readonly userId: FieldRef<"SystemExecution", 'String'>
    readonly executedAt: FieldRef<"SystemExecution", 'DateTime'>
    readonly quality: FieldRef<"SystemExecution", 'Int'>
    readonly notes: FieldRef<"SystemExecution", 'String'>
    readonly strengthensIdentity: FieldRef<"SystemExecution", 'Boolean'>
    readonly mood: FieldRef<"SystemExecution", 'String'>
    readonly energy: FieldRef<"SystemExecution", 'String'>
    readonly location: FieldRef<"SystemExecution", 'String'>
    readonly createdAt: FieldRef<"SystemExecution", 'DateTime'>
    readonly updatedAt: FieldRef<"SystemExecution", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SystemExecution findUnique
   */
  export type SystemExecutionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter, which SystemExecution to fetch.
     */
    where: SystemExecutionWhereUniqueInput
  }

  /**
   * SystemExecution findUniqueOrThrow
   */
  export type SystemExecutionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter, which SystemExecution to fetch.
     */
    where: SystemExecutionWhereUniqueInput
  }

  /**
   * SystemExecution findFirst
   */
  export type SystemExecutionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter, which SystemExecution to fetch.
     */
    where?: SystemExecutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemExecutions to fetch.
     */
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemExecutions.
     */
    cursor?: SystemExecutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemExecutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemExecutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemExecutions.
     */
    distinct?: SystemExecutionScalarFieldEnum | SystemExecutionScalarFieldEnum[]
  }

  /**
   * SystemExecution findFirstOrThrow
   */
  export type SystemExecutionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter, which SystemExecution to fetch.
     */
    where?: SystemExecutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemExecutions to fetch.
     */
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemExecutions.
     */
    cursor?: SystemExecutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemExecutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemExecutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemExecutions.
     */
    distinct?: SystemExecutionScalarFieldEnum | SystemExecutionScalarFieldEnum[]
  }

  /**
   * SystemExecution findMany
   */
  export type SystemExecutionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter, which SystemExecutions to fetch.
     */
    where?: SystemExecutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemExecutions to fetch.
     */
    orderBy?: SystemExecutionOrderByWithRelationInput | SystemExecutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemExecutions.
     */
    cursor?: SystemExecutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemExecutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemExecutions.
     */
    skip?: number
    distinct?: SystemExecutionScalarFieldEnum | SystemExecutionScalarFieldEnum[]
  }

  /**
   * SystemExecution create
   */
  export type SystemExecutionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * The data needed to create a SystemExecution.
     */
    data: XOR<SystemExecutionCreateInput, SystemExecutionUncheckedCreateInput>
  }

  /**
   * SystemExecution createMany
   */
  export type SystemExecutionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemExecutions.
     */
    data: SystemExecutionCreateManyInput | SystemExecutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemExecution createManyAndReturn
   */
  export type SystemExecutionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SystemExecutions.
     */
    data: SystemExecutionCreateManyInput | SystemExecutionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SystemExecution update
   */
  export type SystemExecutionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * The data needed to update a SystemExecution.
     */
    data: XOR<SystemExecutionUpdateInput, SystemExecutionUncheckedUpdateInput>
    /**
     * Choose, which SystemExecution to update.
     */
    where: SystemExecutionWhereUniqueInput
  }

  /**
   * SystemExecution updateMany
   */
  export type SystemExecutionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemExecutions.
     */
    data: XOR<SystemExecutionUpdateManyMutationInput, SystemExecutionUncheckedUpdateManyInput>
    /**
     * Filter which SystemExecutions to update
     */
    where?: SystemExecutionWhereInput
  }

  /**
   * SystemExecution upsert
   */
  export type SystemExecutionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * The filter to search for the SystemExecution to update in case it exists.
     */
    where: SystemExecutionWhereUniqueInput
    /**
     * In case the SystemExecution found by the `where` argument doesn't exist, create a new SystemExecution with this data.
     */
    create: XOR<SystemExecutionCreateInput, SystemExecutionUncheckedCreateInput>
    /**
     * In case the SystemExecution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemExecutionUpdateInput, SystemExecutionUncheckedUpdateInput>
  }

  /**
   * SystemExecution delete
   */
  export type SystemExecutionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
    /**
     * Filter which SystemExecution to delete.
     */
    where: SystemExecutionWhereUniqueInput
  }

  /**
   * SystemExecution deleteMany
   */
  export type SystemExecutionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemExecutions to delete
     */
    where?: SystemExecutionWhereInput
  }

  /**
   * SystemExecution without action
   */
  export type SystemExecutionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemExecution
     */
    select?: SystemExecutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemExecutionInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    password: 'password',
    isActive: 'isActive',
    isPremium: 'isPremium',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const IdentityAreaScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    name: 'name',
    description: 'description',
    color: 'color',
    isActive: 'isActive',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type IdentityAreaScalarFieldEnum = (typeof IdentityAreaScalarFieldEnum)[keyof typeof IdentityAreaScalarFieldEnum]


  export const AtomicSystemScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    identityAreaId: 'identityAreaId',
    name: 'name',
    description: 'description',
    cue: 'cue',
    craving: 'craving',
    response: 'response',
    reward: 'reward',
    frequency: 'frequency',
    timeOfDay: 'timeOfDay',
    estimatedMin: 'estimatedMin',
    difficulty: 'difficulty',
    isActive: 'isActive',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AtomicSystemScalarFieldEnum = (typeof AtomicSystemScalarFieldEnum)[keyof typeof AtomicSystemScalarFieldEnum]


  export const SystemExecutionScalarFieldEnum: {
    id: 'id',
    systemId: 'systemId',
    userId: 'userId',
    executedAt: 'executedAt',
    quality: 'quality',
    notes: 'notes',
    strengthensIdentity: 'strengthensIdentity',
    mood: 'mood',
    energy: 'energy',
    location: 'location',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SystemExecutionScalarFieldEnum = (typeof SystemExecutionScalarFieldEnum)[keyof typeof SystemExecutionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'SystemFrequency'
   */
  export type EnumSystemFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SystemFrequency'>
    


  /**
   * Reference to a field of type 'SystemFrequency[]'
   */
  export type ListEnumSystemFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SystemFrequency[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    isPremium?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    identityAreas?: IdentityAreaListRelationFilter
    systems?: AtomicSystemListRelationFilter
    executions?: SystemExecutionListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    isPremium?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    identityAreas?: IdentityAreaOrderByRelationAggregateInput
    systems?: AtomicSystemOrderByRelationAggregateInput
    executions?: SystemExecutionOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    isPremium?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    identityAreas?: IdentityAreaListRelationFilter
    systems?: AtomicSystemListRelationFilter
    executions?: SystemExecutionListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    isPremium?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isPremium?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type IdentityAreaWhereInput = {
    AND?: IdentityAreaWhereInput | IdentityAreaWhereInput[]
    OR?: IdentityAreaWhereInput[]
    NOT?: IdentityAreaWhereInput | IdentityAreaWhereInput[]
    id?: StringFilter<"IdentityArea"> | string
    userId?: StringFilter<"IdentityArea"> | string
    name?: StringFilter<"IdentityArea"> | string
    description?: StringNullableFilter<"IdentityArea"> | string | null
    color?: StringFilter<"IdentityArea"> | string
    isActive?: BoolFilter<"IdentityArea"> | boolean
    order?: IntFilter<"IdentityArea"> | number
    createdAt?: DateTimeFilter<"IdentityArea"> | Date | string
    updatedAt?: DateTimeFilter<"IdentityArea"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    systems?: AtomicSystemListRelationFilter
  }

  export type IdentityAreaOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    systems?: AtomicSystemOrderByRelationAggregateInput
  }

  export type IdentityAreaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_name?: IdentityAreaUserIdNameCompoundUniqueInput
    AND?: IdentityAreaWhereInput | IdentityAreaWhereInput[]
    OR?: IdentityAreaWhereInput[]
    NOT?: IdentityAreaWhereInput | IdentityAreaWhereInput[]
    userId?: StringFilter<"IdentityArea"> | string
    name?: StringFilter<"IdentityArea"> | string
    description?: StringNullableFilter<"IdentityArea"> | string | null
    color?: StringFilter<"IdentityArea"> | string
    isActive?: BoolFilter<"IdentityArea"> | boolean
    order?: IntFilter<"IdentityArea"> | number
    createdAt?: DateTimeFilter<"IdentityArea"> | Date | string
    updatedAt?: DateTimeFilter<"IdentityArea"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    systems?: AtomicSystemListRelationFilter
  }, "id" | "userId_name">

  export type IdentityAreaOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: IdentityAreaCountOrderByAggregateInput
    _avg?: IdentityAreaAvgOrderByAggregateInput
    _max?: IdentityAreaMaxOrderByAggregateInput
    _min?: IdentityAreaMinOrderByAggregateInput
    _sum?: IdentityAreaSumOrderByAggregateInput
  }

  export type IdentityAreaScalarWhereWithAggregatesInput = {
    AND?: IdentityAreaScalarWhereWithAggregatesInput | IdentityAreaScalarWhereWithAggregatesInput[]
    OR?: IdentityAreaScalarWhereWithAggregatesInput[]
    NOT?: IdentityAreaScalarWhereWithAggregatesInput | IdentityAreaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IdentityArea"> | string
    userId?: StringWithAggregatesFilter<"IdentityArea"> | string
    name?: StringWithAggregatesFilter<"IdentityArea"> | string
    description?: StringNullableWithAggregatesFilter<"IdentityArea"> | string | null
    color?: StringWithAggregatesFilter<"IdentityArea"> | string
    isActive?: BoolWithAggregatesFilter<"IdentityArea"> | boolean
    order?: IntWithAggregatesFilter<"IdentityArea"> | number
    createdAt?: DateTimeWithAggregatesFilter<"IdentityArea"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"IdentityArea"> | Date | string
  }

  export type AtomicSystemWhereInput = {
    AND?: AtomicSystemWhereInput | AtomicSystemWhereInput[]
    OR?: AtomicSystemWhereInput[]
    NOT?: AtomicSystemWhereInput | AtomicSystemWhereInput[]
    id?: StringFilter<"AtomicSystem"> | string
    userId?: StringFilter<"AtomicSystem"> | string
    identityAreaId?: StringFilter<"AtomicSystem"> | string
    name?: StringFilter<"AtomicSystem"> | string
    description?: StringNullableFilter<"AtomicSystem"> | string | null
    cue?: StringFilter<"AtomicSystem"> | string
    craving?: StringFilter<"AtomicSystem"> | string
    response?: StringFilter<"AtomicSystem"> | string
    reward?: StringFilter<"AtomicSystem"> | string
    frequency?: EnumSystemFrequencyFilter<"AtomicSystem"> | $Enums.SystemFrequency
    timeOfDay?: StringNullableFilter<"AtomicSystem"> | string | null
    estimatedMin?: IntNullableFilter<"AtomicSystem"> | number | null
    difficulty?: IntFilter<"AtomicSystem"> | number
    isActive?: BoolFilter<"AtomicSystem"> | boolean
    order?: IntFilter<"AtomicSystem"> | number
    createdAt?: DateTimeFilter<"AtomicSystem"> | Date | string
    updatedAt?: DateTimeFilter<"AtomicSystem"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    identityArea?: XOR<IdentityAreaRelationFilter, IdentityAreaWhereInput>
    executions?: SystemExecutionListRelationFilter
  }

  export type AtomicSystemOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    identityAreaId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    cue?: SortOrder
    craving?: SortOrder
    response?: SortOrder
    reward?: SortOrder
    frequency?: SortOrder
    timeOfDay?: SortOrderInput | SortOrder
    estimatedMin?: SortOrderInput | SortOrder
    difficulty?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    identityArea?: IdentityAreaOrderByWithRelationInput
    executions?: SystemExecutionOrderByRelationAggregateInput
  }

  export type AtomicSystemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_name?: AtomicSystemUserIdNameCompoundUniqueInput
    AND?: AtomicSystemWhereInput | AtomicSystemWhereInput[]
    OR?: AtomicSystemWhereInput[]
    NOT?: AtomicSystemWhereInput | AtomicSystemWhereInput[]
    userId?: StringFilter<"AtomicSystem"> | string
    identityAreaId?: StringFilter<"AtomicSystem"> | string
    name?: StringFilter<"AtomicSystem"> | string
    description?: StringNullableFilter<"AtomicSystem"> | string | null
    cue?: StringFilter<"AtomicSystem"> | string
    craving?: StringFilter<"AtomicSystem"> | string
    response?: StringFilter<"AtomicSystem"> | string
    reward?: StringFilter<"AtomicSystem"> | string
    frequency?: EnumSystemFrequencyFilter<"AtomicSystem"> | $Enums.SystemFrequency
    timeOfDay?: StringNullableFilter<"AtomicSystem"> | string | null
    estimatedMin?: IntNullableFilter<"AtomicSystem"> | number | null
    difficulty?: IntFilter<"AtomicSystem"> | number
    isActive?: BoolFilter<"AtomicSystem"> | boolean
    order?: IntFilter<"AtomicSystem"> | number
    createdAt?: DateTimeFilter<"AtomicSystem"> | Date | string
    updatedAt?: DateTimeFilter<"AtomicSystem"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    identityArea?: XOR<IdentityAreaRelationFilter, IdentityAreaWhereInput>
    executions?: SystemExecutionListRelationFilter
  }, "id" | "userId_name">

  export type AtomicSystemOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    identityAreaId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    cue?: SortOrder
    craving?: SortOrder
    response?: SortOrder
    reward?: SortOrder
    frequency?: SortOrder
    timeOfDay?: SortOrderInput | SortOrder
    estimatedMin?: SortOrderInput | SortOrder
    difficulty?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AtomicSystemCountOrderByAggregateInput
    _avg?: AtomicSystemAvgOrderByAggregateInput
    _max?: AtomicSystemMaxOrderByAggregateInput
    _min?: AtomicSystemMinOrderByAggregateInput
    _sum?: AtomicSystemSumOrderByAggregateInput
  }

  export type AtomicSystemScalarWhereWithAggregatesInput = {
    AND?: AtomicSystemScalarWhereWithAggregatesInput | AtomicSystemScalarWhereWithAggregatesInput[]
    OR?: AtomicSystemScalarWhereWithAggregatesInput[]
    NOT?: AtomicSystemScalarWhereWithAggregatesInput | AtomicSystemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AtomicSystem"> | string
    userId?: StringWithAggregatesFilter<"AtomicSystem"> | string
    identityAreaId?: StringWithAggregatesFilter<"AtomicSystem"> | string
    name?: StringWithAggregatesFilter<"AtomicSystem"> | string
    description?: StringNullableWithAggregatesFilter<"AtomicSystem"> | string | null
    cue?: StringWithAggregatesFilter<"AtomicSystem"> | string
    craving?: StringWithAggregatesFilter<"AtomicSystem"> | string
    response?: StringWithAggregatesFilter<"AtomicSystem"> | string
    reward?: StringWithAggregatesFilter<"AtomicSystem"> | string
    frequency?: EnumSystemFrequencyWithAggregatesFilter<"AtomicSystem"> | $Enums.SystemFrequency
    timeOfDay?: StringNullableWithAggregatesFilter<"AtomicSystem"> | string | null
    estimatedMin?: IntNullableWithAggregatesFilter<"AtomicSystem"> | number | null
    difficulty?: IntWithAggregatesFilter<"AtomicSystem"> | number
    isActive?: BoolWithAggregatesFilter<"AtomicSystem"> | boolean
    order?: IntWithAggregatesFilter<"AtomicSystem"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AtomicSystem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AtomicSystem"> | Date | string
  }

  export type SystemExecutionWhereInput = {
    AND?: SystemExecutionWhereInput | SystemExecutionWhereInput[]
    OR?: SystemExecutionWhereInput[]
    NOT?: SystemExecutionWhereInput | SystemExecutionWhereInput[]
    id?: StringFilter<"SystemExecution"> | string
    systemId?: StringFilter<"SystemExecution"> | string
    userId?: StringFilter<"SystemExecution"> | string
    executedAt?: DateTimeFilter<"SystemExecution"> | Date | string
    quality?: IntFilter<"SystemExecution"> | number
    notes?: StringNullableFilter<"SystemExecution"> | string | null
    strengthensIdentity?: BoolFilter<"SystemExecution"> | boolean
    mood?: StringNullableFilter<"SystemExecution"> | string | null
    energy?: StringNullableFilter<"SystemExecution"> | string | null
    location?: StringNullableFilter<"SystemExecution"> | string | null
    createdAt?: DateTimeFilter<"SystemExecution"> | Date | string
    updatedAt?: DateTimeFilter<"SystemExecution"> | Date | string
    system?: XOR<AtomicSystemRelationFilter, AtomicSystemWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SystemExecutionOrderByWithRelationInput = {
    id?: SortOrder
    systemId?: SortOrder
    userId?: SortOrder
    executedAt?: SortOrder
    quality?: SortOrder
    notes?: SortOrderInput | SortOrder
    strengthensIdentity?: SortOrder
    mood?: SortOrderInput | SortOrder
    energy?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    system?: AtomicSystemOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type SystemExecutionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SystemExecutionWhereInput | SystemExecutionWhereInput[]
    OR?: SystemExecutionWhereInput[]
    NOT?: SystemExecutionWhereInput | SystemExecutionWhereInput[]
    systemId?: StringFilter<"SystemExecution"> | string
    userId?: StringFilter<"SystemExecution"> | string
    executedAt?: DateTimeFilter<"SystemExecution"> | Date | string
    quality?: IntFilter<"SystemExecution"> | number
    notes?: StringNullableFilter<"SystemExecution"> | string | null
    strengthensIdentity?: BoolFilter<"SystemExecution"> | boolean
    mood?: StringNullableFilter<"SystemExecution"> | string | null
    energy?: StringNullableFilter<"SystemExecution"> | string | null
    location?: StringNullableFilter<"SystemExecution"> | string | null
    createdAt?: DateTimeFilter<"SystemExecution"> | Date | string
    updatedAt?: DateTimeFilter<"SystemExecution"> | Date | string
    system?: XOR<AtomicSystemRelationFilter, AtomicSystemWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SystemExecutionOrderByWithAggregationInput = {
    id?: SortOrder
    systemId?: SortOrder
    userId?: SortOrder
    executedAt?: SortOrder
    quality?: SortOrder
    notes?: SortOrderInput | SortOrder
    strengthensIdentity?: SortOrder
    mood?: SortOrderInput | SortOrder
    energy?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SystemExecutionCountOrderByAggregateInput
    _avg?: SystemExecutionAvgOrderByAggregateInput
    _max?: SystemExecutionMaxOrderByAggregateInput
    _min?: SystemExecutionMinOrderByAggregateInput
    _sum?: SystemExecutionSumOrderByAggregateInput
  }

  export type SystemExecutionScalarWhereWithAggregatesInput = {
    AND?: SystemExecutionScalarWhereWithAggregatesInput | SystemExecutionScalarWhereWithAggregatesInput[]
    OR?: SystemExecutionScalarWhereWithAggregatesInput[]
    NOT?: SystemExecutionScalarWhereWithAggregatesInput | SystemExecutionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SystemExecution"> | string
    systemId?: StringWithAggregatesFilter<"SystemExecution"> | string
    userId?: StringWithAggregatesFilter<"SystemExecution"> | string
    executedAt?: DateTimeWithAggregatesFilter<"SystemExecution"> | Date | string
    quality?: IntWithAggregatesFilter<"SystemExecution"> | number
    notes?: StringNullableWithAggregatesFilter<"SystemExecution"> | string | null
    strengthensIdentity?: BoolWithAggregatesFilter<"SystemExecution"> | boolean
    mood?: StringNullableWithAggregatesFilter<"SystemExecution"> | string | null
    energy?: StringNullableWithAggregatesFilter<"SystemExecution"> | string | null
    location?: StringNullableWithAggregatesFilter<"SystemExecution"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SystemExecution"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SystemExecution"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaCreateNestedManyWithoutUserInput
    systems?: AtomicSystemCreateNestedManyWithoutUserInput
    executions?: SystemExecutionCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaUncheckedCreateNestedManyWithoutUserInput
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutUserInput
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUncheckedUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUncheckedUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IdentityAreaCreateInput = {
    id?: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutIdentityAreasInput
    systems?: AtomicSystemCreateNestedManyWithoutIdentityAreaInput
  }

  export type IdentityAreaUncheckedCreateInput = {
    id?: string
    userId: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutIdentityAreaInput
  }

  export type IdentityAreaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutIdentityAreasNestedInput
    systems?: AtomicSystemUpdateManyWithoutIdentityAreaNestedInput
  }

  export type IdentityAreaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    systems?: AtomicSystemUncheckedUpdateManyWithoutIdentityAreaNestedInput
  }

  export type IdentityAreaCreateManyInput = {
    id?: string
    userId: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IdentityAreaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IdentityAreaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtomicSystemCreateInput = {
    id?: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSystemsInput
    identityArea: IdentityAreaCreateNestedOneWithoutSystemsInput
    executions?: SystemExecutionCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemUncheckedCreateInput = {
    id?: string
    userId: string
    identityAreaId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSystemsNestedInput
    identityArea?: IdentityAreaUpdateOneRequiredWithoutSystemsNestedInput
    executions?: SystemExecutionUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    identityAreaId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    executions?: SystemExecutionUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemCreateManyInput = {
    id?: string
    userId: string
    identityAreaId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtomicSystemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtomicSystemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    identityAreaId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionCreateInput = {
    id?: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    system: AtomicSystemCreateNestedOneWithoutExecutionsInput
    user: UserCreateNestedOneWithoutExecutionsInput
  }

  export type SystemExecutionUncheckedCreateInput = {
    id?: string
    systemId: string
    userId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: AtomicSystemUpdateOneRequiredWithoutExecutionsNestedInput
    user?: UserUpdateOneRequiredWithoutExecutionsNestedInput
  }

  export type SystemExecutionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionCreateManyInput = {
    id?: string
    systemId: string
    userId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IdentityAreaListRelationFilter = {
    every?: IdentityAreaWhereInput
    some?: IdentityAreaWhereInput
    none?: IdentityAreaWhereInput
  }

  export type AtomicSystemListRelationFilter = {
    every?: AtomicSystemWhereInput
    some?: AtomicSystemWhereInput
    none?: AtomicSystemWhereInput
  }

  export type SystemExecutionListRelationFilter = {
    every?: SystemExecutionWhereInput
    some?: SystemExecutionWhereInput
    none?: SystemExecutionWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type IdentityAreaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AtomicSystemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SystemExecutionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    isPremium?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    isPremium?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    isPremium?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type IdentityAreaUserIdNameCompoundUniqueInput = {
    userId: string
    name: string
  }

  export type IdentityAreaCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IdentityAreaAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type IdentityAreaMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IdentityAreaMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IdentityAreaSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumSystemFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.SystemFrequency | EnumSystemFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumSystemFrequencyFilter<$PrismaModel> | $Enums.SystemFrequency
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type IdentityAreaRelationFilter = {
    is?: IdentityAreaWhereInput
    isNot?: IdentityAreaWhereInput
  }

  export type AtomicSystemUserIdNameCompoundUniqueInput = {
    userId: string
    name: string
  }

  export type AtomicSystemCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    identityAreaId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    cue?: SortOrder
    craving?: SortOrder
    response?: SortOrder
    reward?: SortOrder
    frequency?: SortOrder
    timeOfDay?: SortOrder
    estimatedMin?: SortOrder
    difficulty?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtomicSystemAvgOrderByAggregateInput = {
    estimatedMin?: SortOrder
    difficulty?: SortOrder
    order?: SortOrder
  }

  export type AtomicSystemMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    identityAreaId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    cue?: SortOrder
    craving?: SortOrder
    response?: SortOrder
    reward?: SortOrder
    frequency?: SortOrder
    timeOfDay?: SortOrder
    estimatedMin?: SortOrder
    difficulty?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtomicSystemMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    identityAreaId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    cue?: SortOrder
    craving?: SortOrder
    response?: SortOrder
    reward?: SortOrder
    frequency?: SortOrder
    timeOfDay?: SortOrder
    estimatedMin?: SortOrder
    difficulty?: SortOrder
    isActive?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtomicSystemSumOrderByAggregateInput = {
    estimatedMin?: SortOrder
    difficulty?: SortOrder
    order?: SortOrder
  }

  export type EnumSystemFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SystemFrequency | EnumSystemFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumSystemFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.SystemFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSystemFrequencyFilter<$PrismaModel>
    _max?: NestedEnumSystemFrequencyFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type AtomicSystemRelationFilter = {
    is?: AtomicSystemWhereInput
    isNot?: AtomicSystemWhereInput
  }

  export type SystemExecutionCountOrderByAggregateInput = {
    id?: SortOrder
    systemId?: SortOrder
    userId?: SortOrder
    executedAt?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    strengthensIdentity?: SortOrder
    mood?: SortOrder
    energy?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemExecutionAvgOrderByAggregateInput = {
    quality?: SortOrder
  }

  export type SystemExecutionMaxOrderByAggregateInput = {
    id?: SortOrder
    systemId?: SortOrder
    userId?: SortOrder
    executedAt?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    strengthensIdentity?: SortOrder
    mood?: SortOrder
    energy?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemExecutionMinOrderByAggregateInput = {
    id?: SortOrder
    systemId?: SortOrder
    userId?: SortOrder
    executedAt?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    strengthensIdentity?: SortOrder
    mood?: SortOrder
    energy?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemExecutionSumOrderByAggregateInput = {
    quality?: SortOrder
  }

  export type IdentityAreaCreateNestedManyWithoutUserInput = {
    create?: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput> | IdentityAreaCreateWithoutUserInput[] | IdentityAreaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutUserInput | IdentityAreaCreateOrConnectWithoutUserInput[]
    createMany?: IdentityAreaCreateManyUserInputEnvelope
    connect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
  }

  export type AtomicSystemCreateNestedManyWithoutUserInput = {
    create?: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput> | AtomicSystemCreateWithoutUserInput[] | AtomicSystemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutUserInput | AtomicSystemCreateOrConnectWithoutUserInput[]
    createMany?: AtomicSystemCreateManyUserInputEnvelope
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
  }

  export type SystemExecutionCreateNestedManyWithoutUserInput = {
    create?: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput> | SystemExecutionCreateWithoutUserInput[] | SystemExecutionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutUserInput | SystemExecutionCreateOrConnectWithoutUserInput[]
    createMany?: SystemExecutionCreateManyUserInputEnvelope
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type IdentityAreaUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput> | IdentityAreaCreateWithoutUserInput[] | IdentityAreaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutUserInput | IdentityAreaCreateOrConnectWithoutUserInput[]
    createMany?: IdentityAreaCreateManyUserInputEnvelope
    connect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
  }

  export type AtomicSystemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput> | AtomicSystemCreateWithoutUserInput[] | AtomicSystemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutUserInput | AtomicSystemCreateOrConnectWithoutUserInput[]
    createMany?: AtomicSystemCreateManyUserInputEnvelope
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
  }

  export type SystemExecutionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput> | SystemExecutionCreateWithoutUserInput[] | SystemExecutionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutUserInput | SystemExecutionCreateOrConnectWithoutUserInput[]
    createMany?: SystemExecutionCreateManyUserInputEnvelope
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IdentityAreaUpdateManyWithoutUserNestedInput = {
    create?: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput> | IdentityAreaCreateWithoutUserInput[] | IdentityAreaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutUserInput | IdentityAreaCreateOrConnectWithoutUserInput[]
    upsert?: IdentityAreaUpsertWithWhereUniqueWithoutUserInput | IdentityAreaUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: IdentityAreaCreateManyUserInputEnvelope
    set?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    disconnect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    delete?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    connect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    update?: IdentityAreaUpdateWithWhereUniqueWithoutUserInput | IdentityAreaUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: IdentityAreaUpdateManyWithWhereWithoutUserInput | IdentityAreaUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: IdentityAreaScalarWhereInput | IdentityAreaScalarWhereInput[]
  }

  export type AtomicSystemUpdateManyWithoutUserNestedInput = {
    create?: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput> | AtomicSystemCreateWithoutUserInput[] | AtomicSystemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutUserInput | AtomicSystemCreateOrConnectWithoutUserInput[]
    upsert?: AtomicSystemUpsertWithWhereUniqueWithoutUserInput | AtomicSystemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AtomicSystemCreateManyUserInputEnvelope
    set?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    disconnect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    delete?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    update?: AtomicSystemUpdateWithWhereUniqueWithoutUserInput | AtomicSystemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AtomicSystemUpdateManyWithWhereWithoutUserInput | AtomicSystemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
  }

  export type SystemExecutionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput> | SystemExecutionCreateWithoutUserInput[] | SystemExecutionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutUserInput | SystemExecutionCreateOrConnectWithoutUserInput[]
    upsert?: SystemExecutionUpsertWithWhereUniqueWithoutUserInput | SystemExecutionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SystemExecutionCreateManyUserInputEnvelope
    set?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    disconnect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    delete?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    update?: SystemExecutionUpdateWithWhereUniqueWithoutUserInput | SystemExecutionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SystemExecutionUpdateManyWithWhereWithoutUserInput | SystemExecutionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type IdentityAreaUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput> | IdentityAreaCreateWithoutUserInput[] | IdentityAreaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutUserInput | IdentityAreaCreateOrConnectWithoutUserInput[]
    upsert?: IdentityAreaUpsertWithWhereUniqueWithoutUserInput | IdentityAreaUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: IdentityAreaCreateManyUserInputEnvelope
    set?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    disconnect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    delete?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    connect?: IdentityAreaWhereUniqueInput | IdentityAreaWhereUniqueInput[]
    update?: IdentityAreaUpdateWithWhereUniqueWithoutUserInput | IdentityAreaUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: IdentityAreaUpdateManyWithWhereWithoutUserInput | IdentityAreaUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: IdentityAreaScalarWhereInput | IdentityAreaScalarWhereInput[]
  }

  export type AtomicSystemUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput> | AtomicSystemCreateWithoutUserInput[] | AtomicSystemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutUserInput | AtomicSystemCreateOrConnectWithoutUserInput[]
    upsert?: AtomicSystemUpsertWithWhereUniqueWithoutUserInput | AtomicSystemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AtomicSystemCreateManyUserInputEnvelope
    set?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    disconnect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    delete?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    update?: AtomicSystemUpdateWithWhereUniqueWithoutUserInput | AtomicSystemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AtomicSystemUpdateManyWithWhereWithoutUserInput | AtomicSystemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
  }

  export type SystemExecutionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput> | SystemExecutionCreateWithoutUserInput[] | SystemExecutionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutUserInput | SystemExecutionCreateOrConnectWithoutUserInput[]
    upsert?: SystemExecutionUpsertWithWhereUniqueWithoutUserInput | SystemExecutionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SystemExecutionCreateManyUserInputEnvelope
    set?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    disconnect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    delete?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    update?: SystemExecutionUpdateWithWhereUniqueWithoutUserInput | SystemExecutionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SystemExecutionUpdateManyWithWhereWithoutUserInput | SystemExecutionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserCreateNestedOneWithoutIdentityAreasInput = {
    create?: XOR<UserCreateWithoutIdentityAreasInput, UserUncheckedCreateWithoutIdentityAreasInput>
    connectOrCreate?: UserCreateOrConnectWithoutIdentityAreasInput
    connect?: UserWhereUniqueInput
  }

  export type AtomicSystemCreateNestedManyWithoutIdentityAreaInput = {
    create?: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput> | AtomicSystemCreateWithoutIdentityAreaInput[] | AtomicSystemUncheckedCreateWithoutIdentityAreaInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutIdentityAreaInput | AtomicSystemCreateOrConnectWithoutIdentityAreaInput[]
    createMany?: AtomicSystemCreateManyIdentityAreaInputEnvelope
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
  }

  export type AtomicSystemUncheckedCreateNestedManyWithoutIdentityAreaInput = {
    create?: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput> | AtomicSystemCreateWithoutIdentityAreaInput[] | AtomicSystemUncheckedCreateWithoutIdentityAreaInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutIdentityAreaInput | AtomicSystemCreateOrConnectWithoutIdentityAreaInput[]
    createMany?: AtomicSystemCreateManyIdentityAreaInputEnvelope
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutIdentityAreasNestedInput = {
    create?: XOR<UserCreateWithoutIdentityAreasInput, UserUncheckedCreateWithoutIdentityAreasInput>
    connectOrCreate?: UserCreateOrConnectWithoutIdentityAreasInput
    upsert?: UserUpsertWithoutIdentityAreasInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutIdentityAreasInput, UserUpdateWithoutIdentityAreasInput>, UserUncheckedUpdateWithoutIdentityAreasInput>
  }

  export type AtomicSystemUpdateManyWithoutIdentityAreaNestedInput = {
    create?: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput> | AtomicSystemCreateWithoutIdentityAreaInput[] | AtomicSystemUncheckedCreateWithoutIdentityAreaInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutIdentityAreaInput | AtomicSystemCreateOrConnectWithoutIdentityAreaInput[]
    upsert?: AtomicSystemUpsertWithWhereUniqueWithoutIdentityAreaInput | AtomicSystemUpsertWithWhereUniqueWithoutIdentityAreaInput[]
    createMany?: AtomicSystemCreateManyIdentityAreaInputEnvelope
    set?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    disconnect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    delete?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    update?: AtomicSystemUpdateWithWhereUniqueWithoutIdentityAreaInput | AtomicSystemUpdateWithWhereUniqueWithoutIdentityAreaInput[]
    updateMany?: AtomicSystemUpdateManyWithWhereWithoutIdentityAreaInput | AtomicSystemUpdateManyWithWhereWithoutIdentityAreaInput[]
    deleteMany?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
  }

  export type AtomicSystemUncheckedUpdateManyWithoutIdentityAreaNestedInput = {
    create?: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput> | AtomicSystemCreateWithoutIdentityAreaInput[] | AtomicSystemUncheckedCreateWithoutIdentityAreaInput[]
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutIdentityAreaInput | AtomicSystemCreateOrConnectWithoutIdentityAreaInput[]
    upsert?: AtomicSystemUpsertWithWhereUniqueWithoutIdentityAreaInput | AtomicSystemUpsertWithWhereUniqueWithoutIdentityAreaInput[]
    createMany?: AtomicSystemCreateManyIdentityAreaInputEnvelope
    set?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    disconnect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    delete?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    connect?: AtomicSystemWhereUniqueInput | AtomicSystemWhereUniqueInput[]
    update?: AtomicSystemUpdateWithWhereUniqueWithoutIdentityAreaInput | AtomicSystemUpdateWithWhereUniqueWithoutIdentityAreaInput[]
    updateMany?: AtomicSystemUpdateManyWithWhereWithoutIdentityAreaInput | AtomicSystemUpdateManyWithWhereWithoutIdentityAreaInput[]
    deleteMany?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSystemsInput = {
    create?: XOR<UserCreateWithoutSystemsInput, UserUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSystemsInput
    connect?: UserWhereUniqueInput
  }

  export type IdentityAreaCreateNestedOneWithoutSystemsInput = {
    create?: XOR<IdentityAreaCreateWithoutSystemsInput, IdentityAreaUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutSystemsInput
    connect?: IdentityAreaWhereUniqueInput
  }

  export type SystemExecutionCreateNestedManyWithoutSystemInput = {
    create?: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput> | SystemExecutionCreateWithoutSystemInput[] | SystemExecutionUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutSystemInput | SystemExecutionCreateOrConnectWithoutSystemInput[]
    createMany?: SystemExecutionCreateManySystemInputEnvelope
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
  }

  export type SystemExecutionUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput> | SystemExecutionCreateWithoutSystemInput[] | SystemExecutionUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutSystemInput | SystemExecutionCreateOrConnectWithoutSystemInput[]
    createMany?: SystemExecutionCreateManySystemInputEnvelope
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
  }

  export type EnumSystemFrequencyFieldUpdateOperationsInput = {
    set?: $Enums.SystemFrequency
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutSystemsNestedInput = {
    create?: XOR<UserCreateWithoutSystemsInput, UserUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSystemsInput
    upsert?: UserUpsertWithoutSystemsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSystemsInput, UserUpdateWithoutSystemsInput>, UserUncheckedUpdateWithoutSystemsInput>
  }

  export type IdentityAreaUpdateOneRequiredWithoutSystemsNestedInput = {
    create?: XOR<IdentityAreaCreateWithoutSystemsInput, IdentityAreaUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: IdentityAreaCreateOrConnectWithoutSystemsInput
    upsert?: IdentityAreaUpsertWithoutSystemsInput
    connect?: IdentityAreaWhereUniqueInput
    update?: XOR<XOR<IdentityAreaUpdateToOneWithWhereWithoutSystemsInput, IdentityAreaUpdateWithoutSystemsInput>, IdentityAreaUncheckedUpdateWithoutSystemsInput>
  }

  export type SystemExecutionUpdateManyWithoutSystemNestedInput = {
    create?: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput> | SystemExecutionCreateWithoutSystemInput[] | SystemExecutionUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutSystemInput | SystemExecutionCreateOrConnectWithoutSystemInput[]
    upsert?: SystemExecutionUpsertWithWhereUniqueWithoutSystemInput | SystemExecutionUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: SystemExecutionCreateManySystemInputEnvelope
    set?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    disconnect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    delete?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    update?: SystemExecutionUpdateWithWhereUniqueWithoutSystemInput | SystemExecutionUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: SystemExecutionUpdateManyWithWhereWithoutSystemInput | SystemExecutionUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
  }

  export type SystemExecutionUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput> | SystemExecutionCreateWithoutSystemInput[] | SystemExecutionUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: SystemExecutionCreateOrConnectWithoutSystemInput | SystemExecutionCreateOrConnectWithoutSystemInput[]
    upsert?: SystemExecutionUpsertWithWhereUniqueWithoutSystemInput | SystemExecutionUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: SystemExecutionCreateManySystemInputEnvelope
    set?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    disconnect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    delete?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    connect?: SystemExecutionWhereUniqueInput | SystemExecutionWhereUniqueInput[]
    update?: SystemExecutionUpdateWithWhereUniqueWithoutSystemInput | SystemExecutionUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: SystemExecutionUpdateManyWithWhereWithoutSystemInput | SystemExecutionUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
  }

  export type AtomicSystemCreateNestedOneWithoutExecutionsInput = {
    create?: XOR<AtomicSystemCreateWithoutExecutionsInput, AtomicSystemUncheckedCreateWithoutExecutionsInput>
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutExecutionsInput
    connect?: AtomicSystemWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutExecutionsInput = {
    create?: XOR<UserCreateWithoutExecutionsInput, UserUncheckedCreateWithoutExecutionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutExecutionsInput
    connect?: UserWhereUniqueInput
  }

  export type AtomicSystemUpdateOneRequiredWithoutExecutionsNestedInput = {
    create?: XOR<AtomicSystemCreateWithoutExecutionsInput, AtomicSystemUncheckedCreateWithoutExecutionsInput>
    connectOrCreate?: AtomicSystemCreateOrConnectWithoutExecutionsInput
    upsert?: AtomicSystemUpsertWithoutExecutionsInput
    connect?: AtomicSystemWhereUniqueInput
    update?: XOR<XOR<AtomicSystemUpdateToOneWithWhereWithoutExecutionsInput, AtomicSystemUpdateWithoutExecutionsInput>, AtomicSystemUncheckedUpdateWithoutExecutionsInput>
  }

  export type UserUpdateOneRequiredWithoutExecutionsNestedInput = {
    create?: XOR<UserCreateWithoutExecutionsInput, UserUncheckedCreateWithoutExecutionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutExecutionsInput
    upsert?: UserUpsertWithoutExecutionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutExecutionsInput, UserUpdateWithoutExecutionsInput>, UserUncheckedUpdateWithoutExecutionsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumSystemFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.SystemFrequency | EnumSystemFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumSystemFrequencyFilter<$PrismaModel> | $Enums.SystemFrequency
  }

  export type NestedEnumSystemFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SystemFrequency | EnumSystemFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.SystemFrequency[] | ListEnumSystemFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumSystemFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.SystemFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSystemFrequencyFilter<$PrismaModel>
    _max?: NestedEnumSystemFrequencyFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type IdentityAreaCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    systems?: AtomicSystemCreateNestedManyWithoutIdentityAreaInput
  }

  export type IdentityAreaUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutIdentityAreaInput
  }

  export type IdentityAreaCreateOrConnectWithoutUserInput = {
    where: IdentityAreaWhereUniqueInput
    create: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput>
  }

  export type IdentityAreaCreateManyUserInputEnvelope = {
    data: IdentityAreaCreateManyUserInput | IdentityAreaCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AtomicSystemCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    identityArea: IdentityAreaCreateNestedOneWithoutSystemsInput
    executions?: SystemExecutionCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemUncheckedCreateWithoutUserInput = {
    id?: string
    identityAreaId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemCreateOrConnectWithoutUserInput = {
    where: AtomicSystemWhereUniqueInput
    create: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput>
  }

  export type AtomicSystemCreateManyUserInputEnvelope = {
    data: AtomicSystemCreateManyUserInput | AtomicSystemCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SystemExecutionCreateWithoutUserInput = {
    id?: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    system: AtomicSystemCreateNestedOneWithoutExecutionsInput
  }

  export type SystemExecutionUncheckedCreateWithoutUserInput = {
    id?: string
    systemId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionCreateOrConnectWithoutUserInput = {
    where: SystemExecutionWhereUniqueInput
    create: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput>
  }

  export type SystemExecutionCreateManyUserInputEnvelope = {
    data: SystemExecutionCreateManyUserInput | SystemExecutionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type IdentityAreaUpsertWithWhereUniqueWithoutUserInput = {
    where: IdentityAreaWhereUniqueInput
    update: XOR<IdentityAreaUpdateWithoutUserInput, IdentityAreaUncheckedUpdateWithoutUserInput>
    create: XOR<IdentityAreaCreateWithoutUserInput, IdentityAreaUncheckedCreateWithoutUserInput>
  }

  export type IdentityAreaUpdateWithWhereUniqueWithoutUserInput = {
    where: IdentityAreaWhereUniqueInput
    data: XOR<IdentityAreaUpdateWithoutUserInput, IdentityAreaUncheckedUpdateWithoutUserInput>
  }

  export type IdentityAreaUpdateManyWithWhereWithoutUserInput = {
    where: IdentityAreaScalarWhereInput
    data: XOR<IdentityAreaUpdateManyMutationInput, IdentityAreaUncheckedUpdateManyWithoutUserInput>
  }

  export type IdentityAreaScalarWhereInput = {
    AND?: IdentityAreaScalarWhereInput | IdentityAreaScalarWhereInput[]
    OR?: IdentityAreaScalarWhereInput[]
    NOT?: IdentityAreaScalarWhereInput | IdentityAreaScalarWhereInput[]
    id?: StringFilter<"IdentityArea"> | string
    userId?: StringFilter<"IdentityArea"> | string
    name?: StringFilter<"IdentityArea"> | string
    description?: StringNullableFilter<"IdentityArea"> | string | null
    color?: StringFilter<"IdentityArea"> | string
    isActive?: BoolFilter<"IdentityArea"> | boolean
    order?: IntFilter<"IdentityArea"> | number
    createdAt?: DateTimeFilter<"IdentityArea"> | Date | string
    updatedAt?: DateTimeFilter<"IdentityArea"> | Date | string
  }

  export type AtomicSystemUpsertWithWhereUniqueWithoutUserInput = {
    where: AtomicSystemWhereUniqueInput
    update: XOR<AtomicSystemUpdateWithoutUserInput, AtomicSystemUncheckedUpdateWithoutUserInput>
    create: XOR<AtomicSystemCreateWithoutUserInput, AtomicSystemUncheckedCreateWithoutUserInput>
  }

  export type AtomicSystemUpdateWithWhereUniqueWithoutUserInput = {
    where: AtomicSystemWhereUniqueInput
    data: XOR<AtomicSystemUpdateWithoutUserInput, AtomicSystemUncheckedUpdateWithoutUserInput>
  }

  export type AtomicSystemUpdateManyWithWhereWithoutUserInput = {
    where: AtomicSystemScalarWhereInput
    data: XOR<AtomicSystemUpdateManyMutationInput, AtomicSystemUncheckedUpdateManyWithoutUserInput>
  }

  export type AtomicSystemScalarWhereInput = {
    AND?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
    OR?: AtomicSystemScalarWhereInput[]
    NOT?: AtomicSystemScalarWhereInput | AtomicSystemScalarWhereInput[]
    id?: StringFilter<"AtomicSystem"> | string
    userId?: StringFilter<"AtomicSystem"> | string
    identityAreaId?: StringFilter<"AtomicSystem"> | string
    name?: StringFilter<"AtomicSystem"> | string
    description?: StringNullableFilter<"AtomicSystem"> | string | null
    cue?: StringFilter<"AtomicSystem"> | string
    craving?: StringFilter<"AtomicSystem"> | string
    response?: StringFilter<"AtomicSystem"> | string
    reward?: StringFilter<"AtomicSystem"> | string
    frequency?: EnumSystemFrequencyFilter<"AtomicSystem"> | $Enums.SystemFrequency
    timeOfDay?: StringNullableFilter<"AtomicSystem"> | string | null
    estimatedMin?: IntNullableFilter<"AtomicSystem"> | number | null
    difficulty?: IntFilter<"AtomicSystem"> | number
    isActive?: BoolFilter<"AtomicSystem"> | boolean
    order?: IntFilter<"AtomicSystem"> | number
    createdAt?: DateTimeFilter<"AtomicSystem"> | Date | string
    updatedAt?: DateTimeFilter<"AtomicSystem"> | Date | string
  }

  export type SystemExecutionUpsertWithWhereUniqueWithoutUserInput = {
    where: SystemExecutionWhereUniqueInput
    update: XOR<SystemExecutionUpdateWithoutUserInput, SystemExecutionUncheckedUpdateWithoutUserInput>
    create: XOR<SystemExecutionCreateWithoutUserInput, SystemExecutionUncheckedCreateWithoutUserInput>
  }

  export type SystemExecutionUpdateWithWhereUniqueWithoutUserInput = {
    where: SystemExecutionWhereUniqueInput
    data: XOR<SystemExecutionUpdateWithoutUserInput, SystemExecutionUncheckedUpdateWithoutUserInput>
  }

  export type SystemExecutionUpdateManyWithWhereWithoutUserInput = {
    where: SystemExecutionScalarWhereInput
    data: XOR<SystemExecutionUpdateManyMutationInput, SystemExecutionUncheckedUpdateManyWithoutUserInput>
  }

  export type SystemExecutionScalarWhereInput = {
    AND?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
    OR?: SystemExecutionScalarWhereInput[]
    NOT?: SystemExecutionScalarWhereInput | SystemExecutionScalarWhereInput[]
    id?: StringFilter<"SystemExecution"> | string
    systemId?: StringFilter<"SystemExecution"> | string
    userId?: StringFilter<"SystemExecution"> | string
    executedAt?: DateTimeFilter<"SystemExecution"> | Date | string
    quality?: IntFilter<"SystemExecution"> | number
    notes?: StringNullableFilter<"SystemExecution"> | string | null
    strengthensIdentity?: BoolFilter<"SystemExecution"> | boolean
    mood?: StringNullableFilter<"SystemExecution"> | string | null
    energy?: StringNullableFilter<"SystemExecution"> | string | null
    location?: StringNullableFilter<"SystemExecution"> | string | null
    createdAt?: DateTimeFilter<"SystemExecution"> | Date | string
    updatedAt?: DateTimeFilter<"SystemExecution"> | Date | string
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type UserCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaCreateNestedManyWithoutUserInput
    systems?: AtomicSystemCreateNestedManyWithoutUserInput
    executions?: SystemExecutionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaUncheckedCreateNestedManyWithoutUserInput
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutUserInput
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUncheckedUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUncheckedUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutIdentityAreasInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    systems?: AtomicSystemCreateNestedManyWithoutUserInput
    executions?: SystemExecutionCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutIdentityAreasInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutUserInput
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutIdentityAreasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutIdentityAreasInput, UserUncheckedCreateWithoutIdentityAreasInput>
  }

  export type AtomicSystemCreateWithoutIdentityAreaInput = {
    id?: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSystemsInput
    executions?: SystemExecutionCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemUncheckedCreateWithoutIdentityAreaInput = {
    id?: string
    userId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutSystemInput
  }

  export type AtomicSystemCreateOrConnectWithoutIdentityAreaInput = {
    where: AtomicSystemWhereUniqueInput
    create: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput>
  }

  export type AtomicSystemCreateManyIdentityAreaInputEnvelope = {
    data: AtomicSystemCreateManyIdentityAreaInput | AtomicSystemCreateManyIdentityAreaInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutIdentityAreasInput = {
    update: XOR<UserUpdateWithoutIdentityAreasInput, UserUncheckedUpdateWithoutIdentityAreasInput>
    create: XOR<UserCreateWithoutIdentityAreasInput, UserUncheckedCreateWithoutIdentityAreasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutIdentityAreasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutIdentityAreasInput, UserUncheckedUpdateWithoutIdentityAreasInput>
  }

  export type UserUpdateWithoutIdentityAreasInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    systems?: AtomicSystemUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutIdentityAreasInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    systems?: AtomicSystemUncheckedUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AtomicSystemUpsertWithWhereUniqueWithoutIdentityAreaInput = {
    where: AtomicSystemWhereUniqueInput
    update: XOR<AtomicSystemUpdateWithoutIdentityAreaInput, AtomicSystemUncheckedUpdateWithoutIdentityAreaInput>
    create: XOR<AtomicSystemCreateWithoutIdentityAreaInput, AtomicSystemUncheckedCreateWithoutIdentityAreaInput>
  }

  export type AtomicSystemUpdateWithWhereUniqueWithoutIdentityAreaInput = {
    where: AtomicSystemWhereUniqueInput
    data: XOR<AtomicSystemUpdateWithoutIdentityAreaInput, AtomicSystemUncheckedUpdateWithoutIdentityAreaInput>
  }

  export type AtomicSystemUpdateManyWithWhereWithoutIdentityAreaInput = {
    where: AtomicSystemScalarWhereInput
    data: XOR<AtomicSystemUpdateManyMutationInput, AtomicSystemUncheckedUpdateManyWithoutIdentityAreaInput>
  }

  export type UserCreateWithoutSystemsInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaCreateNestedManyWithoutUserInput
    executions?: SystemExecutionCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSystemsInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaUncheckedCreateNestedManyWithoutUserInput
    executions?: SystemExecutionUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSystemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSystemsInput, UserUncheckedCreateWithoutSystemsInput>
  }

  export type IdentityAreaCreateWithoutSystemsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutIdentityAreasInput
  }

  export type IdentityAreaUncheckedCreateWithoutSystemsInput = {
    id?: string
    userId: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IdentityAreaCreateOrConnectWithoutSystemsInput = {
    where: IdentityAreaWhereUniqueInput
    create: XOR<IdentityAreaCreateWithoutSystemsInput, IdentityAreaUncheckedCreateWithoutSystemsInput>
  }

  export type SystemExecutionCreateWithoutSystemInput = {
    id?: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutExecutionsInput
  }

  export type SystemExecutionUncheckedCreateWithoutSystemInput = {
    id?: string
    userId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionCreateOrConnectWithoutSystemInput = {
    where: SystemExecutionWhereUniqueInput
    create: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput>
  }

  export type SystemExecutionCreateManySystemInputEnvelope = {
    data: SystemExecutionCreateManySystemInput | SystemExecutionCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSystemsInput = {
    update: XOR<UserUpdateWithoutSystemsInput, UserUncheckedUpdateWithoutSystemsInput>
    create: XOR<UserCreateWithoutSystemsInput, UserUncheckedCreateWithoutSystemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSystemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSystemsInput, UserUncheckedUpdateWithoutSystemsInput>
  }

  export type UserUpdateWithoutSystemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSystemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUncheckedUpdateManyWithoutUserNestedInput
    executions?: SystemExecutionUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type IdentityAreaUpsertWithoutSystemsInput = {
    update: XOR<IdentityAreaUpdateWithoutSystemsInput, IdentityAreaUncheckedUpdateWithoutSystemsInput>
    create: XOR<IdentityAreaCreateWithoutSystemsInput, IdentityAreaUncheckedCreateWithoutSystemsInput>
    where?: IdentityAreaWhereInput
  }

  export type IdentityAreaUpdateToOneWithWhereWithoutSystemsInput = {
    where?: IdentityAreaWhereInput
    data: XOR<IdentityAreaUpdateWithoutSystemsInput, IdentityAreaUncheckedUpdateWithoutSystemsInput>
  }

  export type IdentityAreaUpdateWithoutSystemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutIdentityAreasNestedInput
  }

  export type IdentityAreaUncheckedUpdateWithoutSystemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionUpsertWithWhereUniqueWithoutSystemInput = {
    where: SystemExecutionWhereUniqueInput
    update: XOR<SystemExecutionUpdateWithoutSystemInput, SystemExecutionUncheckedUpdateWithoutSystemInput>
    create: XOR<SystemExecutionCreateWithoutSystemInput, SystemExecutionUncheckedCreateWithoutSystemInput>
  }

  export type SystemExecutionUpdateWithWhereUniqueWithoutSystemInput = {
    where: SystemExecutionWhereUniqueInput
    data: XOR<SystemExecutionUpdateWithoutSystemInput, SystemExecutionUncheckedUpdateWithoutSystemInput>
  }

  export type SystemExecutionUpdateManyWithWhereWithoutSystemInput = {
    where: SystemExecutionScalarWhereInput
    data: XOR<SystemExecutionUpdateManyMutationInput, SystemExecutionUncheckedUpdateManyWithoutSystemInput>
  }

  export type AtomicSystemCreateWithoutExecutionsInput = {
    id?: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSystemsInput
    identityArea: IdentityAreaCreateNestedOneWithoutSystemsInput
  }

  export type AtomicSystemUncheckedCreateWithoutExecutionsInput = {
    id?: string
    userId: string
    identityAreaId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtomicSystemCreateOrConnectWithoutExecutionsInput = {
    where: AtomicSystemWhereUniqueInput
    create: XOR<AtomicSystemCreateWithoutExecutionsInput, AtomicSystemUncheckedCreateWithoutExecutionsInput>
  }

  export type UserCreateWithoutExecutionsInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaCreateNestedManyWithoutUserInput
    systems?: AtomicSystemCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutExecutionsInput = {
    id?: string
    email: string
    name: string
    password: string
    isActive?: boolean
    isPremium?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    identityAreas?: IdentityAreaUncheckedCreateNestedManyWithoutUserInput
    systems?: AtomicSystemUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutExecutionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutExecutionsInput, UserUncheckedCreateWithoutExecutionsInput>
  }

  export type AtomicSystemUpsertWithoutExecutionsInput = {
    update: XOR<AtomicSystemUpdateWithoutExecutionsInput, AtomicSystemUncheckedUpdateWithoutExecutionsInput>
    create: XOR<AtomicSystemCreateWithoutExecutionsInput, AtomicSystemUncheckedCreateWithoutExecutionsInput>
    where?: AtomicSystemWhereInput
  }

  export type AtomicSystemUpdateToOneWithWhereWithoutExecutionsInput = {
    where?: AtomicSystemWhereInput
    data: XOR<AtomicSystemUpdateWithoutExecutionsInput, AtomicSystemUncheckedUpdateWithoutExecutionsInput>
  }

  export type AtomicSystemUpdateWithoutExecutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSystemsNestedInput
    identityArea?: IdentityAreaUpdateOneRequiredWithoutSystemsNestedInput
  }

  export type AtomicSystemUncheckedUpdateWithoutExecutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    identityAreaId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutExecutionsInput = {
    update: XOR<UserUpdateWithoutExecutionsInput, UserUncheckedUpdateWithoutExecutionsInput>
    create: XOR<UserCreateWithoutExecutionsInput, UserUncheckedCreateWithoutExecutionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutExecutionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutExecutionsInput, UserUncheckedUpdateWithoutExecutionsInput>
  }

  export type UserUpdateWithoutExecutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutExecutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityAreas?: IdentityAreaUncheckedUpdateManyWithoutUserNestedInput
    systems?: AtomicSystemUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type IdentityAreaCreateManyUserInput = {
    id?: string
    name: string
    description?: string | null
    color?: string
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtomicSystemCreateManyUserInput = {
    id?: string
    identityAreaId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionCreateManyUserInput = {
    id?: string
    systemId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type IdentityAreaUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    systems?: AtomicSystemUpdateManyWithoutIdentityAreaNestedInput
  }

  export type IdentityAreaUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    systems?: AtomicSystemUncheckedUpdateManyWithoutIdentityAreaNestedInput
  }

  export type IdentityAreaUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtomicSystemUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    identityArea?: IdentityAreaUpdateOneRequiredWithoutSystemsNestedInput
    executions?: SystemExecutionUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    identityAreaId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    executions?: SystemExecutionUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    identityAreaId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: AtomicSystemUpdateOneRequiredWithoutExecutionsNestedInput
  }

  export type SystemExecutionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    systemId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtomicSystemCreateManyIdentityAreaInput = {
    id?: string
    userId: string
    name: string
    description?: string | null
    cue: string
    craving: string
    response: string
    reward: string
    frequency?: $Enums.SystemFrequency
    timeOfDay?: string | null
    estimatedMin?: number | null
    difficulty?: number
    isActive?: boolean
    order?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtomicSystemUpdateWithoutIdentityAreaInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSystemsNestedInput
    executions?: SystemExecutionUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemUncheckedUpdateWithoutIdentityAreaInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    executions?: SystemExecutionUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type AtomicSystemUncheckedUpdateManyWithoutIdentityAreaInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cue?: StringFieldUpdateOperationsInput | string
    craving?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    reward?: StringFieldUpdateOperationsInput | string
    frequency?: EnumSystemFrequencyFieldUpdateOperationsInput | $Enums.SystemFrequency
    timeOfDay?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedMin?: NullableIntFieldUpdateOperationsInput | number | null
    difficulty?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionCreateManySystemInput = {
    id?: string
    userId: string
    executedAt?: Date | string
    quality?: number
    notes?: string | null
    strengthensIdentity?: boolean
    mood?: string | null
    energy?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemExecutionUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutExecutionsNestedInput
  }

  export type SystemExecutionUncheckedUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemExecutionUncheckedUpdateManyWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    executedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    quality?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    strengthensIdentity?: BoolFieldUpdateOperationsInput | boolean
    mood?: NullableStringFieldUpdateOperationsInput | string | null
    energy?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdentityAreaCountOutputTypeDefaultArgs instead
     */
    export type IdentityAreaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IdentityAreaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AtomicSystemCountOutputTypeDefaultArgs instead
     */
    export type AtomicSystemCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AtomicSystemCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RefreshTokenDefaultArgs instead
     */
    export type RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdentityAreaDefaultArgs instead
     */
    export type IdentityAreaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IdentityAreaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AtomicSystemDefaultArgs instead
     */
    export type AtomicSystemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AtomicSystemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SystemExecutionDefaultArgs instead
     */
    export type SystemExecutionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SystemExecutionDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}